// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: manager/v1/admin.proto

package managerv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Dashboard metrics aggregation
type GetDashboardMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDashboardMetricsRequest) Reset() {
	*x = GetDashboardMetricsRequest{}
	mi := &file_manager_v1_admin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDashboardMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardMetricsRequest) ProtoMessage() {}

func (x *GetDashboardMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_admin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetDashboardMetricsRequest) Descriptor() ([]byte, []int) {
	return file_manager_v1_admin_proto_rawDescGZIP(), []int{0}
}

type GetDashboardMetricsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TotalBmcs      int32                  `protobuf:"varint,1,opt,name=total_bmcs,json=totalBmcs,proto3" json:"total_bmcs,omitempty"`
	OnlineBmcs     int32                  `protobuf:"varint,2,opt,name=online_bmcs,json=onlineBmcs,proto3" json:"online_bmcs,omitempty"`
	OfflineBmcs    int32                  `protobuf:"varint,3,opt,name=offline_bmcs,json=offlineBmcs,proto3" json:"offline_bmcs,omitempty"`
	TotalGateways  int32                  `protobuf:"varint,4,opt,name=total_gateways,json=totalGateways,proto3" json:"total_gateways,omitempty"`
	ActiveGateways int32                  `protobuf:"varint,5,opt,name=active_gateways,json=activeGateways,proto3" json:"active_gateways,omitempty"`
	TotalCustomers int32                  `protobuf:"varint,6,opt,name=total_customers,json=totalCustomers,proto3" json:"total_customers,omitempty"`
	ActiveSessions int32                  `protobuf:"varint,7,opt,name=active_sessions,json=activeSessions,proto3" json:"active_sessions,omitempty"` // Future: requires session tracking
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetDashboardMetricsResponse) Reset() {
	*x = GetDashboardMetricsResponse{}
	mi := &file_manager_v1_admin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDashboardMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDashboardMetricsResponse) ProtoMessage() {}

func (x *GetDashboardMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_admin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDashboardMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetDashboardMetricsResponse) Descriptor() ([]byte, []int) {
	return file_manager_v1_admin_proto_rawDescGZIP(), []int{1}
}

func (x *GetDashboardMetricsResponse) GetTotalBmcs() int32 {
	if x != nil {
		return x.TotalBmcs
	}
	return 0
}

func (x *GetDashboardMetricsResponse) GetOnlineBmcs() int32 {
	if x != nil {
		return x.OnlineBmcs
	}
	return 0
}

func (x *GetDashboardMetricsResponse) GetOfflineBmcs() int32 {
	if x != nil {
		return x.OfflineBmcs
	}
	return 0
}

func (x *GetDashboardMetricsResponse) GetTotalGateways() int32 {
	if x != nil {
		return x.TotalGateways
	}
	return 0
}

func (x *GetDashboardMetricsResponse) GetActiveGateways() int32 {
	if x != nil {
		return x.ActiveGateways
	}
	return 0
}

func (x *GetDashboardMetricsResponse) GetTotalCustomers() int32 {
	if x != nil {
		return x.TotalCustomers
	}
	return 0
}

func (x *GetDashboardMetricsResponse) GetActiveSessions() int32 {
	if x != nil {
		return x.ActiveSessions
	}
	return 0
}

// List all servers across all customers (admin only)
type ListAllServersRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PageSize       int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                  // Default 100, max 500
	PageToken      string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`                // Pagination token
	CustomerFilter string                 `protobuf:"bytes,3,opt,name=customer_filter,json=customerFilter,proto3" json:"customer_filter,omitempty"` // Optional: filter by customer_id
	RegionFilter   []string               `protobuf:"bytes,4,rep,name=region_filter,json=regionFilter,proto3" json:"region_filter,omitempty"`       // Optional: filter by gateway regions (multi-select)
	GatewayFilter  string                 `protobuf:"bytes,5,opt,name=gateway_filter,json=gatewayFilter,proto3" json:"gateway_filter,omitempty"`    // Optional: filter by specific gateway_id
	StatusFilter   string                 `protobuf:"bytes,6,opt,name=status_filter,json=statusFilter,proto3" json:"status_filter,omitempty"`       // Optional: filter by status
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListAllServersRequest) Reset() {
	*x = ListAllServersRequest{}
	mi := &file_manager_v1_admin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllServersRequest) ProtoMessage() {}

func (x *ListAllServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_admin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllServersRequest.ProtoReflect.Descriptor instead.
func (*ListAllServersRequest) Descriptor() ([]byte, []int) {
	return file_manager_v1_admin_proto_rawDescGZIP(), []int{2}
}

func (x *ListAllServersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAllServersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListAllServersRequest) GetCustomerFilter() string {
	if x != nil {
		return x.CustomerFilter
	}
	return ""
}

func (x *ListAllServersRequest) GetRegionFilter() []string {
	if x != nil {
		return x.RegionFilter
	}
	return nil
}

func (x *ListAllServersRequest) GetGatewayFilter() string {
	if x != nil {
		return x.GatewayFilter
	}
	return ""
}

func (x *ListAllServersRequest) GetStatusFilter() string {
	if x != nil {
		return x.StatusFilter
	}
	return ""
}

type ListAllServersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Servers       []*ServerDetails       `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAllServersResponse) Reset() {
	*x = ListAllServersResponse{}
	mi := &file_manager_v1_admin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllServersResponse) ProtoMessage() {}

func (x *ListAllServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_admin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllServersResponse.ProtoReflect.Descriptor instead.
func (*ListAllServersResponse) Descriptor() ([]byte, []int) {
	return file_manager_v1_admin_proto_rawDescGZIP(), []int{3}
}

func (x *ListAllServersResponse) GetServers() []*ServerDetails {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *ListAllServersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListAllServersResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type ServerDetails struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ServerId        string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	CustomerId      string                 `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	DatacenterId    string                 `protobuf:"bytes,3,opt,name=datacenter_id,json=datacenterId,proto3" json:"datacenter_id,omitempty"`
	GatewayId       string                 `protobuf:"bytes,4,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	PrimaryEndpoint string                 `protobuf:"bytes,5,opt,name=primary_endpoint,json=primaryEndpoint,proto3" json:"primary_endpoint,omitempty"`
	PrimaryProtocol string                 `protobuf:"bytes,6,opt,name=primary_protocol,json=primaryProtocol,proto3" json:"primary_protocol,omitempty"` // "ipmi" or "redfish"
	Status          string                 `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`                                          // "online", "offline", "unknown"
	HasVnc          bool                   `protobuf:"varint,8,opt,name=has_vnc,json=hasVnc,proto3" json:"has_vnc,omitempty"`
	HasSol          bool                   `protobuf:"varint,9,opt,name=has_sol,json=hasSol,proto3" json:"has_sol,omitempty"`
	LastSeen        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ServerDetails) Reset() {
	*x = ServerDetails{}
	mi := &file_manager_v1_admin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerDetails) ProtoMessage() {}

func (x *ServerDetails) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_admin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerDetails.ProtoReflect.Descriptor instead.
func (*ServerDetails) Descriptor() ([]byte, []int) {
	return file_manager_v1_admin_proto_rawDescGZIP(), []int{4}
}

func (x *ServerDetails) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ServerDetails) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *ServerDetails) GetDatacenterId() string {
	if x != nil {
		return x.DatacenterId
	}
	return ""
}

func (x *ServerDetails) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *ServerDetails) GetPrimaryEndpoint() string {
	if x != nil {
		return x.PrimaryEndpoint
	}
	return ""
}

func (x *ServerDetails) GetPrimaryProtocol() string {
	if x != nil {
		return x.PrimaryProtocol
	}
	return ""
}

func (x *ServerDetails) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ServerDetails) GetHasVnc() bool {
	if x != nil {
		return x.HasVnc
	}
	return false
}

func (x *ServerDetails) GetHasSol() bool {
	if x != nil {
		return x.HasSol
	}
	return false
}

func (x *ServerDetails) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *ServerDetails) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// List customers with server counts (admin only)
type ListAllCustomersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAllCustomersRequest) Reset() {
	*x = ListAllCustomersRequest{}
	mi := &file_manager_v1_admin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllCustomersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllCustomersRequest) ProtoMessage() {}

func (x *ListAllCustomersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_admin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllCustomersRequest.ProtoReflect.Descriptor instead.
func (*ListAllCustomersRequest) Descriptor() ([]byte, []int) {
	return file_manager_v1_admin_proto_rawDescGZIP(), []int{5}
}

func (x *ListAllCustomersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListAllCustomersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListAllCustomersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Customers     []*CustomerSummary     `protobuf:"bytes,1,rep,name=customers,proto3" json:"customers,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListAllCustomersResponse) Reset() {
	*x = ListAllCustomersResponse{}
	mi := &file_manager_v1_admin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListAllCustomersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAllCustomersResponse) ProtoMessage() {}

func (x *ListAllCustomersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_admin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAllCustomersResponse.ProtoReflect.Descriptor instead.
func (*ListAllCustomersResponse) Descriptor() ([]byte, []int) {
	return file_manager_v1_admin_proto_rawDescGZIP(), []int{6}
}

func (x *ListAllCustomersResponse) GetCustomers() []*CustomerSummary {
	if x != nil {
		return x.Customers
	}
	return nil
}

func (x *ListAllCustomersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type CustomerSummary struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CustomerId        string                 `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	Email             string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	ServerCount       int32                  `protobuf:"varint,3,opt,name=server_count,json=serverCount,proto3" json:"server_count,omitempty"`
	OnlineServerCount int32                  `protobuf:"varint,4,opt,name=online_server_count,json=onlineServerCount,proto3" json:"online_server_count,omitempty"`
	IsAdmin           bool                   `protobuf:"varint,5,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CustomerSummary) Reset() {
	*x = CustomerSummary{}
	mi := &file_manager_v1_admin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CustomerSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerSummary) ProtoMessage() {}

func (x *CustomerSummary) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_admin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerSummary.ProtoReflect.Descriptor instead.
func (*CustomerSummary) Descriptor() ([]byte, []int) {
	return file_manager_v1_admin_proto_rawDescGZIP(), []int{7}
}

func (x *CustomerSummary) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *CustomerSummary) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CustomerSummary) GetServerCount() int32 {
	if x != nil {
		return x.ServerCount
	}
	return 0
}

func (x *CustomerSummary) GetOnlineServerCount() int32 {
	if x != nil {
		return x.OnlineServerCount
	}
	return 0
}

func (x *CustomerSummary) GetIsAdmin() bool {
	if x != nil {
		return x.IsAdmin
	}
	return false
}

func (x *CustomerSummary) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// Gateway health metrics (admin only)
type GetGatewayHealthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGatewayHealthRequest) Reset() {
	*x = GetGatewayHealthRequest{}
	mi := &file_manager_v1_admin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGatewayHealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGatewayHealthRequest) ProtoMessage() {}

func (x *GetGatewayHealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_admin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGatewayHealthRequest.ProtoReflect.Descriptor instead.
func (*GetGatewayHealthRequest) Descriptor() ([]byte, []int) {
	return file_manager_v1_admin_proto_rawDescGZIP(), []int{8}
}

type GetGatewayHealthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gateways      []*GatewayHealth       `protobuf:"bytes,1,rep,name=gateways,proto3" json:"gateways,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGatewayHealthResponse) Reset() {
	*x = GetGatewayHealthResponse{}
	mi := &file_manager_v1_admin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGatewayHealthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGatewayHealthResponse) ProtoMessage() {}

func (x *GetGatewayHealthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_admin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGatewayHealthResponse.ProtoReflect.Descriptor instead.
func (*GetGatewayHealthResponse) Descriptor() ([]byte, []int) {
	return file_manager_v1_admin_proto_rawDescGZIP(), []int{9}
}

func (x *GetGatewayHealthResponse) GetGateways() []*GatewayHealth {
	if x != nil {
		return x.Gateways
	}
	return nil
}

type GatewayHealth struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GatewayId     string                 `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	Region        string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	Endpoint      string                 `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"` // "active", "degraded", "offline"
	LastSeen      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	ServerCount   int32                  `protobuf:"varint,6,opt,name=server_count,json=serverCount,proto3" json:"server_count,omitempty"`
	DatacenterIds []string               `protobuf:"bytes,7,rep,name=datacenter_ids,json=datacenterIds,proto3" json:"datacenter_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GatewayHealth) Reset() {
	*x = GatewayHealth{}
	mi := &file_manager_v1_admin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayHealth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayHealth) ProtoMessage() {}

func (x *GatewayHealth) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_admin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayHealth.ProtoReflect.Descriptor instead.
func (*GatewayHealth) Descriptor() ([]byte, []int) {
	return file_manager_v1_admin_proto_rawDescGZIP(), []int{10}
}

func (x *GatewayHealth) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *GatewayHealth) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GatewayHealth) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *GatewayHealth) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GatewayHealth) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *GatewayHealth) GetServerCount() int32 {
	if x != nil {
		return x.ServerCount
	}
	return 0
}

func (x *GatewayHealth) GetDatacenterIds() []string {
	if x != nil {
		return x.DatacenterIds
	}
	return nil
}

// Available regions for filtering
type GetRegionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRegionsRequest) Reset() {
	*x = GetRegionsRequest{}
	mi := &file_manager_v1_admin_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRegionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionsRequest) ProtoMessage() {}

func (x *GetRegionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_admin_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionsRequest.ProtoReflect.Descriptor instead.
func (*GetRegionsRequest) Descriptor() ([]byte, []int) {
	return file_manager_v1_admin_proto_rawDescGZIP(), []int{11}
}

type GetRegionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Regions       []string               `protobuf:"bytes,1,rep,name=regions,proto3" json:"regions,omitempty"` // e.g., ["us-east-1", "us-west-2", "eu-west-1"]
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRegionsResponse) Reset() {
	*x = GetRegionsResponse{}
	mi := &file_manager_v1_admin_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRegionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionsResponse) ProtoMessage() {}

func (x *GetRegionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_admin_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionsResponse.ProtoReflect.Descriptor instead.
func (*GetRegionsResponse) Descriptor() ([]byte, []int) {
	return file_manager_v1_admin_proto_rawDescGZIP(), []int{12}
}

func (x *GetRegionsResponse) GetRegions() []string {
	if x != nil {
		return x.Regions
	}
	return nil
}

// VNC/SOL session launch (admin only)
type LaunchSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"` // Server ID to launch console session for
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LaunchSessionRequest) Reset() {
	*x = LaunchSessionRequest{}
	mi := &file_manager_v1_admin_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LaunchSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchSessionRequest) ProtoMessage() {}

func (x *LaunchSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_admin_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchSessionRequest.ProtoReflect.Descriptor instead.
func (*LaunchSessionRequest) Descriptor() ([]byte, []int) {
	return file_manager_v1_admin_proto_rawDescGZIP(), []int{13}
}

func (x *LaunchSessionRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type LaunchSessionResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SessionId         string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                         // Unique session identifier
	WebsocketEndpoint string                 `protobuf:"bytes,2,opt,name=websocket_endpoint,json=websocketEndpoint,proto3" json:"websocket_endpoint,omitempty"` // WebSocket endpoint for streaming
	ViewerUrl         string                 `protobuf:"bytes,3,opt,name=viewer_url,json=viewerUrl,proto3" json:"viewer_url,omitempty"`                         // Direct URL to web-based viewer/console
	ExpiresAt         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`                         // When the session expires
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *LaunchSessionResponse) Reset() {
	*x = LaunchSessionResponse{}
	mi := &file_manager_v1_admin_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LaunchSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchSessionResponse) ProtoMessage() {}

func (x *LaunchSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_admin_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchSessionResponse.ProtoReflect.Descriptor instead.
func (*LaunchSessionResponse) Descriptor() ([]byte, []int) {
	return file_manager_v1_admin_proto_rawDescGZIP(), []int{14}
}

func (x *LaunchSessionResponse) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *LaunchSessionResponse) GetWebsocketEndpoint() string {
	if x != nil {
		return x.WebsocketEndpoint
	}
	return ""
}

func (x *LaunchSessionResponse) GetViewerUrl() string {
	if x != nil {
		return x.ViewerUrl
	}
	return ""
}

func (x *LaunchSessionResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

var File_manager_v1_admin_proto protoreflect.FileDescriptor

const file_manager_v1_admin_proto_rawDesc = "" +
	"\n" +
	"\x16manager/v1/admin.proto\x12\n" +
	"manager.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x1c\n" +
	"\x1aGetDashboardMetricsRequest\"\xa2\x02\n" +
	"\x1bGetDashboardMetricsResponse\x12\x1d\n" +
	"\n" +
	"total_bmcs\x18\x01 \x01(\x05R\ttotalBmcs\x12\x1f\n" +
	"\vonline_bmcs\x18\x02 \x01(\x05R\n" +
	"onlineBmcs\x12!\n" +
	"\foffline_bmcs\x18\x03 \x01(\x05R\vofflineBmcs\x12%\n" +
	"\x0etotal_gateways\x18\x04 \x01(\x05R\rtotalGateways\x12'\n" +
	"\x0factive_gateways\x18\x05 \x01(\x05R\x0eactiveGateways\x12'\n" +
	"\x0ftotal_customers\x18\x06 \x01(\x05R\x0etotalCustomers\x12'\n" +
	"\x0factive_sessions\x18\a \x01(\x05R\x0eactiveSessions\"\xed\x01\n" +
	"\x15ListAllServersRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\x12'\n" +
	"\x0fcustomer_filter\x18\x03 \x01(\tR\x0ecustomerFilter\x12#\n" +
	"\rregion_filter\x18\x04 \x03(\tR\fregionFilter\x12%\n" +
	"\x0egateway_filter\x18\x05 \x01(\tR\rgatewayFilter\x12#\n" +
	"\rstatus_filter\x18\x06 \x01(\tR\fstatusFilter\"\x96\x01\n" +
	"\x16ListAllServersResponse\x123\n" +
	"\aservers\x18\x01 \x03(\v2\x19.manager.v1.ServerDetailsR\aservers\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\xa5\x03\n" +
	"\rServerDetails\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x1f\n" +
	"\vcustomer_id\x18\x02 \x01(\tR\n" +
	"customerId\x12#\n" +
	"\rdatacenter_id\x18\x03 \x01(\tR\fdatacenterId\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x04 \x01(\tR\tgatewayId\x12)\n" +
	"\x10primary_endpoint\x18\x05 \x01(\tR\x0fprimaryEndpoint\x12)\n" +
	"\x10primary_protocol\x18\x06 \x01(\tR\x0fprimaryProtocol\x12\x16\n" +
	"\x06status\x18\a \x01(\tR\x06status\x12\x17\n" +
	"\ahas_vnc\x18\b \x01(\bR\x06hasVnc\x12\x17\n" +
	"\ahas_sol\x18\t \x01(\bR\x06hasSol\x127\n" +
	"\tlast_seen\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"U\n" +
	"\x17ListAllCustomersRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"}\n" +
	"\x18ListAllCustomersResponse\x129\n" +
	"\tcustomers\x18\x01 \x03(\v2\x1b.manager.v1.CustomerSummaryR\tcustomers\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"\xf1\x01\n" +
	"\x0fCustomerSummary\x12\x1f\n" +
	"\vcustomer_id\x18\x01 \x01(\tR\n" +
	"customerId\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12!\n" +
	"\fserver_count\x18\x03 \x01(\x05R\vserverCount\x12.\n" +
	"\x13online_server_count\x18\x04 \x01(\x05R\x11onlineServerCount\x12\x19\n" +
	"\bis_admin\x18\x05 \x01(\bR\aisAdmin\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\x19\n" +
	"\x17GetGatewayHealthRequest\"Q\n" +
	"\x18GetGatewayHealthResponse\x125\n" +
	"\bgateways\x18\x01 \x03(\v2\x19.manager.v1.GatewayHealthR\bgateways\"\xfd\x01\n" +
	"\rGatewayHealth\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x01 \x01(\tR\tgatewayId\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12\x1a\n" +
	"\bendpoint\x18\x03 \x01(\tR\bendpoint\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\x127\n" +
	"\tlast_seen\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x12!\n" +
	"\fserver_count\x18\x06 \x01(\x05R\vserverCount\x12%\n" +
	"\x0edatacenter_ids\x18\a \x03(\tR\rdatacenterIds\"\x13\n" +
	"\x11GetRegionsRequest\".\n" +
	"\x12GetRegionsResponse\x12\x18\n" +
	"\aregions\x18\x01 \x03(\tR\aregions\"3\n" +
	"\x14LaunchSessionRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\"\xbf\x01\n" +
	"\x15LaunchSessionResponse\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12-\n" +
	"\x12websocket_endpoint\x18\x02 \x01(\tR\x11websocketEndpoint\x12\x1d\n" +
	"\n" +
	"viewer_url\x18\x03 \x01(\tR\tviewerUrl\x129\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt2\x8c\x05\n" +
	"\fAdminService\x12f\n" +
	"\x13GetDashboardMetrics\x12&.manager.v1.GetDashboardMetricsRequest\x1a'.manager.v1.GetDashboardMetricsResponse\x12W\n" +
	"\x0eListAllServers\x12!.manager.v1.ListAllServersRequest\x1a\".manager.v1.ListAllServersResponse\x12]\n" +
	"\x10ListAllCustomers\x12#.manager.v1.ListAllCustomersRequest\x1a$.manager.v1.ListAllCustomersResponse\x12]\n" +
	"\x10GetGatewayHealth\x12#.manager.v1.GetGatewayHealthRequest\x1a$.manager.v1.GetGatewayHealthResponse\x12K\n" +
	"\n" +
	"GetRegions\x12\x1d.manager.v1.GetRegionsRequest\x1a\x1e.manager.v1.GetRegionsResponse\x12W\n" +
	"\x10LaunchVNCSession\x12 .manager.v1.LaunchSessionRequest\x1a!.manager.v1.LaunchSessionResponse\x12W\n" +
	"\x10LaunchSOLSession\x12 .manager.v1.LaunchSessionRequest\x1a!.manager.v1.LaunchSessionResponseB\"Z manager/gen/manager/v1;managerv1b\x06proto3"

var (
	file_manager_v1_admin_proto_rawDescOnce sync.Once
	file_manager_v1_admin_proto_rawDescData []byte
)

func file_manager_v1_admin_proto_rawDescGZIP() []byte {
	file_manager_v1_admin_proto_rawDescOnce.Do(func() {
		file_manager_v1_admin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_manager_v1_admin_proto_rawDesc), len(file_manager_v1_admin_proto_rawDesc)))
	})
	return file_manager_v1_admin_proto_rawDescData
}

var file_manager_v1_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_manager_v1_admin_proto_goTypes = []any{
	(*GetDashboardMetricsRequest)(nil),  // 0: manager.v1.GetDashboardMetricsRequest
	(*GetDashboardMetricsResponse)(nil), // 1: manager.v1.GetDashboardMetricsResponse
	(*ListAllServersRequest)(nil),       // 2: manager.v1.ListAllServersRequest
	(*ListAllServersResponse)(nil),      // 3: manager.v1.ListAllServersResponse
	(*ServerDetails)(nil),               // 4: manager.v1.ServerDetails
	(*ListAllCustomersRequest)(nil),     // 5: manager.v1.ListAllCustomersRequest
	(*ListAllCustomersResponse)(nil),    // 6: manager.v1.ListAllCustomersResponse
	(*CustomerSummary)(nil),             // 7: manager.v1.CustomerSummary
	(*GetGatewayHealthRequest)(nil),     // 8: manager.v1.GetGatewayHealthRequest
	(*GetGatewayHealthResponse)(nil),    // 9: manager.v1.GetGatewayHealthResponse
	(*GatewayHealth)(nil),               // 10: manager.v1.GatewayHealth
	(*GetRegionsRequest)(nil),           // 11: manager.v1.GetRegionsRequest
	(*GetRegionsResponse)(nil),          // 12: manager.v1.GetRegionsResponse
	(*LaunchSessionRequest)(nil),        // 13: manager.v1.LaunchSessionRequest
	(*LaunchSessionResponse)(nil),       // 14: manager.v1.LaunchSessionResponse
	(*timestamppb.Timestamp)(nil),       // 15: google.protobuf.Timestamp
}
var file_manager_v1_admin_proto_depIdxs = []int32{
	4,  // 0: manager.v1.ListAllServersResponse.servers:type_name -> manager.v1.ServerDetails
	15, // 1: manager.v1.ServerDetails.last_seen:type_name -> google.protobuf.Timestamp
	15, // 2: manager.v1.ServerDetails.created_at:type_name -> google.protobuf.Timestamp
	7,  // 3: manager.v1.ListAllCustomersResponse.customers:type_name -> manager.v1.CustomerSummary
	15, // 4: manager.v1.CustomerSummary.created_at:type_name -> google.protobuf.Timestamp
	10, // 5: manager.v1.GetGatewayHealthResponse.gateways:type_name -> manager.v1.GatewayHealth
	15, // 6: manager.v1.GatewayHealth.last_seen:type_name -> google.protobuf.Timestamp
	15, // 7: manager.v1.LaunchSessionResponse.expires_at:type_name -> google.protobuf.Timestamp
	0,  // 8: manager.v1.AdminService.GetDashboardMetrics:input_type -> manager.v1.GetDashboardMetricsRequest
	2,  // 9: manager.v1.AdminService.ListAllServers:input_type -> manager.v1.ListAllServersRequest
	5,  // 10: manager.v1.AdminService.ListAllCustomers:input_type -> manager.v1.ListAllCustomersRequest
	8,  // 11: manager.v1.AdminService.GetGatewayHealth:input_type -> manager.v1.GetGatewayHealthRequest
	11, // 12: manager.v1.AdminService.GetRegions:input_type -> manager.v1.GetRegionsRequest
	13, // 13: manager.v1.AdminService.LaunchVNCSession:input_type -> manager.v1.LaunchSessionRequest
	13, // 14: manager.v1.AdminService.LaunchSOLSession:input_type -> manager.v1.LaunchSessionRequest
	1,  // 15: manager.v1.AdminService.GetDashboardMetrics:output_type -> manager.v1.GetDashboardMetricsResponse
	3,  // 16: manager.v1.AdminService.ListAllServers:output_type -> manager.v1.ListAllServersResponse
	6,  // 17: manager.v1.AdminService.ListAllCustomers:output_type -> manager.v1.ListAllCustomersResponse
	9,  // 18: manager.v1.AdminService.GetGatewayHealth:output_type -> manager.v1.GetGatewayHealthResponse
	12, // 19: manager.v1.AdminService.GetRegions:output_type -> manager.v1.GetRegionsResponse
	14, // 20: manager.v1.AdminService.LaunchVNCSession:output_type -> manager.v1.LaunchSessionResponse
	14, // 21: manager.v1.AdminService.LaunchSOLSession:output_type -> manager.v1.LaunchSessionResponse
	15, // [15:22] is the sub-list for method output_type
	8,  // [8:15] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_manager_v1_admin_proto_init() }
func file_manager_v1_admin_proto_init() {
	if File_manager_v1_admin_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_manager_v1_admin_proto_rawDesc), len(file_manager_v1_admin_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_manager_v1_admin_proto_goTypes,
		DependencyIndexes: file_manager_v1_admin_proto_depIdxs,
		MessageInfos:      file_manager_v1_admin_proto_msgTypes,
	}.Build()
	File_manager_v1_admin_proto = out.File
	file_manager_v1_admin_proto_goTypes = nil
	file_manager_v1_admin_proto_depIdxs = nil
}
