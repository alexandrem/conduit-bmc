// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: manager/v1/manager.proto

package managerv1

import (
	v1 "core/gen/common/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Customer represents a customer/tenant in the system
type Customer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                // Unique customer identifier
	Email         string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`                          // Customer email address (login identifier)
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // When the customer account was created
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Customer) Reset() {
	*x = Customer{}
	mi := &file_manager_v1_manager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customer) ProtoMessage() {}

func (x *Customer) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Customer.ProtoReflect.Descriptor instead.
func (*Customer) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{0}
}

func (x *Customer) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Customer) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Customer) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// Server represents a physical or virtual server with BMC access
// This is the manager's view of servers, including customer ownership and BMC endpoints
type Server struct {
	state             protoimpl.MessageState   `protogen:"open.v1"`
	Id                string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                        // Unique server identifier (e.g., "srv-001", "rack1-server5")
	CustomerId        string                   `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`                                                      // Customer/tenant ID that owns this server
	DatacenterId      string                   `protobuf:"bytes,3,opt,name=datacenter_id,json=datacenterId,proto3" json:"datacenter_id,omitempty"`                                                // Datacenter where the server is physically located
	ControlEndpoints  []*v1.BMCControlEndpoint `protobuf:"bytes,4,rep,name=control_endpoints,json=controlEndpoints,proto3" json:"control_endpoints,omitempty"`                                    // Multiple protocol support (required for RFD 006)
	PrimaryProtocol   v1.BMCType               `protobuf:"varint,5,opt,name=primary_protocol,json=primaryProtocol,proto3,enum=common.v1.BMCType" json:"primary_protocol,omitempty"`               // Preferred protocol for operations
	SolEndpoint       *v1.SOLEndpoint          `protobuf:"bytes,6,opt,name=sol_endpoint,json=solEndpoint,proto3" json:"sol_endpoint,omitempty"`                                                   // Serial-over-LAN endpoint (optional)
	VncEndpoint       *v1.VNCEndpoint          `protobuf:"bytes,7,opt,name=vnc_endpoint,json=vncEndpoint,proto3" json:"vnc_endpoint,omitempty"`                                                   // VNC/KVM endpoint (optional)
	Features          []string                 `protobuf:"bytes,8,rep,name=features,proto3" json:"features,omitempty"`                                                                            // Supported high-level features (e.g., "power", "console", "vnc")
	Status            string                   `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`                                                                                // Current server status (e.g., "online", "offline", "maintenance")
	CreatedAt         *timestamppb.Timestamp   `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                                        // When the server was first registered
	UpdatedAt         *timestamppb.Timestamp   `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                                                        // Last time server information was updated
	Metadata          map[string]string        `protobuf:"bytes,12,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional server metadata
	DiscoveryMetadata *v1.DiscoveryMetadata    `protobuf:"bytes,13,opt,name=discovery_metadata,json=discoveryMetadata,proto3" json:"discovery_metadata,omitempty"`                                // Discovery metadata (RFD 017)
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Server) Reset() {
	*x = Server{}
	mi := &file_manager_v1_manager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Server) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Server) ProtoMessage() {}

func (x *Server) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Server.ProtoReflect.Descriptor instead.
func (*Server) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{1}
}

func (x *Server) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Server) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *Server) GetDatacenterId() string {
	if x != nil {
		return x.DatacenterId
	}
	return ""
}

func (x *Server) GetControlEndpoints() []*v1.BMCControlEndpoint {
	if x != nil {
		return x.ControlEndpoints
	}
	return nil
}

func (x *Server) GetPrimaryProtocol() v1.BMCType {
	if x != nil {
		return x.PrimaryProtocol
	}
	return v1.BMCType(0)
}

func (x *Server) GetSolEndpoint() *v1.SOLEndpoint {
	if x != nil {
		return x.SolEndpoint
	}
	return nil
}

func (x *Server) GetVncEndpoint() *v1.VNCEndpoint {
	if x != nil {
		return x.VncEndpoint
	}
	return nil
}

func (x *Server) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *Server) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Server) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Server) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Server) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Server) GetDiscoveryMetadata() *v1.DiscoveryMetadata {
	if x != nil {
		return x.DiscoveryMetadata
	}
	return nil
}

// RegionalGateway represents a gateway instance serving one or more datacenters
type RegionalGateway struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                               // Unique gateway identifier
	Region         string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`                                       // Geographic region (e.g., "us-east-1", "eu-west-1")
	Endpoint       string                 `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`                                   // Public endpoint URL for client connections
	DatacenterIds  []string               `protobuf:"bytes,4,rep,name=datacenter_ids,json=datacenterIds,proto3" json:"datacenter_ids,omitempty"`    // List of datacenters this gateway serves
	Status         string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`                                       // Gateway status (e.g., "healthy", "degraded", "offline")
	LastSeen       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`                   // Last heartbeat or health check timestamp
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                // When the gateway was first registered
	DelegatedToken string                 `protobuf:"bytes,8,opt,name=delegated_token,json=delegatedToken,proto3" json:"delegated_token,omitempty"` // JWT token delegated for client access to this gateway
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RegionalGateway) Reset() {
	*x = RegionalGateway{}
	mi := &file_manager_v1_manager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegionalGateway) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegionalGateway) ProtoMessage() {}

func (x *RegionalGateway) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegionalGateway.ProtoReflect.Descriptor instead.
func (*RegionalGateway) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{2}
}

func (x *RegionalGateway) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RegionalGateway) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *RegionalGateway) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *RegionalGateway) GetDatacenterIds() []string {
	if x != nil {
		return x.DatacenterIds
	}
	return nil
}

func (x *RegionalGateway) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RegionalGateway) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *RegionalGateway) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *RegionalGateway) GetDelegatedToken() string {
	if x != nil {
		return x.DelegatedToken
	}
	return ""
}

// ServerLocation contains the routing and metadata information for a server
type ServerLocation struct {
	state             protoimpl.MessageState   `protogen:"open.v1"`
	ServerId          string                   `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`                                              // Unique server identifier
	CustomerId        string                   `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`                                        // Customer that owns this server
	DatacenterId      string                   `protobuf:"bytes,3,opt,name=datacenter_id,json=datacenterId,proto3" json:"datacenter_id,omitempty"`                                  // Physical location of the server
	RegionalGatewayId string                   `protobuf:"bytes,4,opt,name=regional_gateway_id,json=regionalGatewayId,proto3" json:"regional_gateway_id,omitempty"`                 // Gateway responsible for routing to this server
	Features          []string                 `protobuf:"bytes,5,rep,name=features,proto3" json:"features,omitempty"`                                                              // BMC capabilities (e.g., "power", "sol", "kvm", "sensors")
	CreatedAt         *timestamppb.Timestamp   `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                           // When the server was first registered
	UpdatedAt         *timestamppb.Timestamp   `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                                           // Last time server information was modified
	BmcProtocols      []*v1.BMCControlEndpoint `protobuf:"bytes,8,rep,name=bmc_protocols,json=bmcProtocols,proto3" json:"bmc_protocols,omitempty"`                                  // Multiple protocol support (required for RFD 006)
	PrimaryProtocol   v1.BMCType               `protobuf:"varint,9,opt,name=primary_protocol,json=primaryProtocol,proto3,enum=common.v1.BMCType" json:"primary_protocol,omitempty"` // Preferred protocol for operations
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ServerLocation) Reset() {
	*x = ServerLocation{}
	mi := &file_manager_v1_manager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerLocation) ProtoMessage() {}

func (x *ServerLocation) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerLocation.ProtoReflect.Descriptor instead.
func (*ServerLocation) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{3}
}

func (x *ServerLocation) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *ServerLocation) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *ServerLocation) GetDatacenterId() string {
	if x != nil {
		return x.DatacenterId
	}
	return ""
}

func (x *ServerLocation) GetRegionalGatewayId() string {
	if x != nil {
		return x.RegionalGatewayId
	}
	return ""
}

func (x *ServerLocation) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *ServerLocation) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ServerLocation) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ServerLocation) GetBmcProtocols() []*v1.BMCControlEndpoint {
	if x != nil {
		return x.BmcProtocols
	}
	return nil
}

func (x *ServerLocation) GetPrimaryProtocol() v1.BMCType {
	if x != nil {
		return x.PrimaryProtocol
	}
	return v1.BMCType(0)
}

// AuthenticateRequest contains customer credentials for initial authentication
type AuthenticateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Email         string                 `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`       // Customer email address (primary identifier)
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // Customer password (or OIDC/OAuth token in production environments)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateRequest) Reset() {
	*x = AuthenticateRequest{}
	mi := &file_manager_v1_manager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateRequest) ProtoMessage() {}

func (x *AuthenticateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateRequest.ProtoReflect.Descriptor instead.
func (*AuthenticateRequest) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{4}
}

func (x *AuthenticateRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AuthenticateRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

// AuthenticateResponse provides authentication tokens and customer information
type AuthenticateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`    // Short-lived JWT token for API access (e.g., 1 hour)
	RefreshToken  string                 `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // Long-lived token for obtaining new access tokens (e.g., 30 days)
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`          // When the access token expires
	Customer      *Customer              `protobuf:"bytes,4,opt,name=customer,proto3" json:"customer,omitempty"`                             // Customer profile information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthenticateResponse) Reset() {
	*x = AuthenticateResponse{}
	mi := &file_manager_v1_manager_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthenticateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticateResponse) ProtoMessage() {}

func (x *AuthenticateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticateResponse.ProtoReflect.Descriptor instead.
func (*AuthenticateResponse) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{5}
}

func (x *AuthenticateResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *AuthenticateResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *AuthenticateResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *AuthenticateResponse) GetCustomer() *Customer {
	if x != nil {
		return x.Customer
	}
	return nil
}

// RefreshTokenRequest uses a refresh token to obtain new access tokens
type RefreshTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RefreshToken  string                 `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"` // The refresh token from initial authentication
	ServerId      string                 `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`             // Optional: scope the new token to a specific server for enhanced security
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshTokenRequest) Reset() {
	*x = RefreshTokenRequest{}
	mi := &file_manager_v1_manager_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRequest) ProtoMessage() {}

func (x *RefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*RefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{6}
}

func (x *RefreshTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *RefreshTokenRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

// RefreshTokenResponse provides a new access token
type RefreshTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccessToken   string                 `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"` // New short-lived JWT token for API access
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`       // When the new access token expires
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RefreshTokenResponse) Reset() {
	*x = RefreshTokenResponse{}
	mi := &file_manager_v1_manager_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RefreshTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenResponse) ProtoMessage() {}

func (x *RefreshTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenResponse.ProtoReflect.Descriptor instead.
func (*RefreshTokenResponse) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{7}
}

func (x *RefreshTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *RefreshTokenResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// GetServerTokenRequest requests a server-specific token with encrypted BMC context
type GetServerTokenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"` // The server ID to create a token for
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerTokenRequest) Reset() {
	*x = GetServerTokenRequest{}
	mi := &file_manager_v1_manager_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerTokenRequest) ProtoMessage() {}

func (x *GetServerTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerTokenRequest.ProtoReflect.Descriptor instead.
func (*GetServerTokenRequest) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{8}
}

func (x *GetServerTokenRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

// GetServerTokenResponse provides a server-specific token with encrypted BMC context
type GetServerTokenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`                          // Server-specific JWT token with encrypted BMC context
	ExpiresAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // When the server token expires
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerTokenResponse) Reset() {
	*x = GetServerTokenResponse{}
	mi := &file_manager_v1_manager_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerTokenResponse) ProtoMessage() {}

func (x *GetServerTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerTokenResponse.ProtoReflect.Descriptor instead.
func (*GetServerTokenResponse) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{9}
}

func (x *GetServerTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetServerTokenResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

// RegisterServerRequest registers a server with the BMC Manager during provisioning
type RegisterServerRequest struct {
	state             protoimpl.MessageState   `protogen:"open.v1"`
	ServerId          string                   `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`                                              // Unique server identifier (must be unique within customer namespace)
	CustomerId        string                   `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`                                        // Customer/tenant ID that owns this server
	DatacenterId      string                   `protobuf:"bytes,3,opt,name=datacenter_id,json=datacenterId,proto3" json:"datacenter_id,omitempty"`                                  // Physical datacenter where the server is located
	RegionalGatewayId string                   `protobuf:"bytes,4,opt,name=regional_gateway_id,json=regionalGatewayId,proto3" json:"regional_gateway_id,omitempty"`                 // Gateway responsible for this server (must serve the datacenter)
	Features          []string                 `protobuf:"bytes,5,rep,name=features,proto3" json:"features,omitempty"`                                                              // BMC capabilities (e.g., "power", "sol", "kvm", "sensors", "media")
	BmcProtocols      []*v1.BMCControlEndpoint `protobuf:"bytes,6,rep,name=bmc_protocols,json=bmcProtocols,proto3" json:"bmc_protocols,omitempty"`                                  // Multiple protocol support (required for RFD 006)
	PrimaryProtocol   v1.BMCType               `protobuf:"varint,7,opt,name=primary_protocol,json=primaryProtocol,proto3,enum=common.v1.BMCType" json:"primary_protocol,omitempty"` // Preferred protocol for operations
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RegisterServerRequest) Reset() {
	*x = RegisterServerRequest{}
	mi := &file_manager_v1_manager_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServerRequest) ProtoMessage() {}

func (x *RegisterServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServerRequest.ProtoReflect.Descriptor instead.
func (*RegisterServerRequest) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterServerRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *RegisterServerRequest) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *RegisterServerRequest) GetDatacenterId() string {
	if x != nil {
		return x.DatacenterId
	}
	return ""
}

func (x *RegisterServerRequest) GetRegionalGatewayId() string {
	if x != nil {
		return x.RegionalGatewayId
	}
	return ""
}

func (x *RegisterServerRequest) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *RegisterServerRequest) GetBmcProtocols() []*v1.BMCControlEndpoint {
	if x != nil {
		return x.BmcProtocols
	}
	return nil
}

func (x *RegisterServerRequest) GetPrimaryProtocol() v1.BMCType {
	if x != nil {
		return x.PrimaryProtocol
	}
	return v1.BMCType(0)
}

// RegisterServerResponse confirms server registration
type RegisterServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Whether registration was successful
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // Success confirmation or detailed error message
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterServerResponse) Reset() {
	*x = RegisterServerResponse{}
	mi := &file_manager_v1_manager_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServerResponse) ProtoMessage() {}

func (x *RegisterServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServerResponse.ProtoReflect.Descriptor instead.
func (*RegisterServerResponse) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{11}
}

func (x *RegisterServerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterServerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// GetServerRequest retrieves information about a specific server
type GetServerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"` // The unique identifier of the server to retrieve
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerRequest) Reset() {
	*x = GetServerRequest{}
	mi := &file_manager_v1_manager_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerRequest) ProtoMessage() {}

func (x *GetServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerRequest.ProtoReflect.Descriptor instead.
func (*GetServerRequest) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{12}
}

func (x *GetServerRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

// GetServerResponse contains the requested server information
type GetServerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Server        *Server                `protobuf:"bytes,1,opt,name=server,proto3" json:"server,omitempty"` // The server information, or error if not found/accessible
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerResponse) Reset() {
	*x = GetServerResponse{}
	mi := &file_manager_v1_manager_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerResponse) ProtoMessage() {}

func (x *GetServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerResponse.ProtoReflect.Descriptor instead.
func (*GetServerResponse) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{13}
}

func (x *GetServerResponse) GetServer() *Server {
	if x != nil {
		return x.Server
	}
	return nil
}

// ListServersRequest retrieves a list of servers accessible to the authenticated customer
type ListServersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional pagination controls
	PageSize      int32  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`   // Maximum number of servers to return (default: 50, max: 1000)
	PageToken     string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"` // Token from previous response to continue pagination
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServersRequest) Reset() {
	*x = ListServersRequest{}
	mi := &file_manager_v1_manager_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersRequest) ProtoMessage() {}

func (x *ListServersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersRequest.ProtoReflect.Descriptor instead.
func (*ListServersRequest) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{14}
}

func (x *ListServersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListServersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// ListServersResponse contains a list of servers and pagination information
type ListServersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Servers       []*Server              `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`                                    // List of servers accessible to the customer
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"` // Token for retrieving the next page (empty if last page)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListServersResponse) Reset() {
	*x = ListServersResponse{}
	mi := &file_manager_v1_manager_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListServersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListServersResponse) ProtoMessage() {}

func (x *ListServersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListServersResponse.ProtoReflect.Descriptor instead.
func (*ListServersResponse) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{15}
}

func (x *ListServersResponse) GetServers() []*Server {
	if x != nil {
		return x.Servers
	}
	return nil
}

func (x *ListServersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// GetServerLocationRequest queries routing information for a server
type GetServerLocationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"` // The server ID to resolve location for
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetServerLocationRequest) Reset() {
	*x = GetServerLocationRequest{}
	mi := &file_manager_v1_manager_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerLocationRequest) ProtoMessage() {}

func (x *GetServerLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerLocationRequest.ProtoReflect.Descriptor instead.
func (*GetServerLocationRequest) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{16}
}

func (x *GetServerLocationRequest) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

// GetServerLocationResponse provides server routing and capability information
type GetServerLocationResponse struct {
	state                   protoimpl.MessageState   `protogen:"open.v1"`
	RegionalGatewayId       string                   `protobuf:"bytes,1,opt,name=regional_gateway_id,json=regionalGatewayId,proto3" json:"regional_gateway_id,omitempty"`                   // Gateway that handles requests for this server
	RegionalGatewayEndpoint string                   `protobuf:"bytes,2,opt,name=regional_gateway_endpoint,json=regionalGatewayEndpoint,proto3" json:"regional_gateway_endpoint,omitempty"` // Full URL/endpoint of the responsible gateway
	DatacenterId            string                   `protobuf:"bytes,3,opt,name=datacenter_id,json=datacenterId,proto3" json:"datacenter_id,omitempty"`                                    // Datacenter where the server is physically located
	Features                []string                 `protobuf:"bytes,4,rep,name=features,proto3" json:"features,omitempty"`                                                                // BMC capabilities supported by this server
	BmcProtocols            []*v1.BMCControlEndpoint `protobuf:"bytes,5,rep,name=bmc_protocols,json=bmcProtocols,proto3" json:"bmc_protocols,omitempty"`                                    // Multiple protocol support (required for RFD 006)
	PrimaryProtocol         v1.BMCType               `protobuf:"varint,6,opt,name=primary_protocol,json=primaryProtocol,proto3,enum=common.v1.BMCType" json:"primary_protocol,omitempty"`   // Preferred protocol for operations
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetServerLocationResponse) Reset() {
	*x = GetServerLocationResponse{}
	mi := &file_manager_v1_manager_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetServerLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerLocationResponse) ProtoMessage() {}

func (x *GetServerLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerLocationResponse.ProtoReflect.Descriptor instead.
func (*GetServerLocationResponse) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{17}
}

func (x *GetServerLocationResponse) GetRegionalGatewayId() string {
	if x != nil {
		return x.RegionalGatewayId
	}
	return ""
}

func (x *GetServerLocationResponse) GetRegionalGatewayEndpoint() string {
	if x != nil {
		return x.RegionalGatewayEndpoint
	}
	return ""
}

func (x *GetServerLocationResponse) GetDatacenterId() string {
	if x != nil {
		return x.DatacenterId
	}
	return ""
}

func (x *GetServerLocationResponse) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *GetServerLocationResponse) GetBmcProtocols() []*v1.BMCControlEndpoint {
	if x != nil {
		return x.BmcProtocols
	}
	return nil
}

func (x *GetServerLocationResponse) GetPrimaryProtocol() v1.BMCType {
	if x != nil {
		return x.PrimaryProtocol
	}
	return v1.BMCType(0)
}

// RegisterGatewayRequest allows gateways to register with the BMC Manager
type RegisterGatewayRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GatewayId     string                 `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`             // Unique identifier for this gateway instance
	Region        string                 `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`                                    // Geographic region (e.g., "us-east-1", "eu-west-1")
	Endpoint      string                 `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`                                // Public endpoint URL where the gateway can be reached
	DatacenterIds []string               `protobuf:"bytes,4,rep,name=datacenter_ids,json=datacenterIds,proto3" json:"datacenter_ids,omitempty"` // List of datacenters this gateway can serve
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterGatewayRequest) Reset() {
	*x = RegisterGatewayRequest{}
	mi := &file_manager_v1_manager_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterGatewayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterGatewayRequest) ProtoMessage() {}

func (x *RegisterGatewayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterGatewayRequest.ProtoReflect.Descriptor instead.
func (*RegisterGatewayRequest) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{18}
}

func (x *RegisterGatewayRequest) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *RegisterGatewayRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *RegisterGatewayRequest) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *RegisterGatewayRequest) GetDatacenterIds() []string {
	if x != nil {
		return x.DatacenterIds
	}
	return nil
}

// RegisterGatewayResponse confirms gateway registration
type RegisterGatewayResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Whether registration was successful
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // Success confirmation or error details
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterGatewayResponse) Reset() {
	*x = RegisterGatewayResponse{}
	mi := &file_manager_v1_manager_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterGatewayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterGatewayResponse) ProtoMessage() {}

func (x *RegisterGatewayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterGatewayResponse.ProtoReflect.Descriptor instead.
func (*RegisterGatewayResponse) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{19}
}

func (x *RegisterGatewayResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterGatewayResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// ListGatewaysRequest queries available gateways
type ListGatewaysRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Region        string                 `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"` // Optional filter to return only gateways in a specific region
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGatewaysRequest) Reset() {
	*x = ListGatewaysRequest{}
	mi := &file_manager_v1_manager_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGatewaysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGatewaysRequest) ProtoMessage() {}

func (x *ListGatewaysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGatewaysRequest.ProtoReflect.Descriptor instead.
func (*ListGatewaysRequest) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{20}
}

func (x *ListGatewaysRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

// ListGatewaysResponse provides a list of registered gateways
type ListGatewaysResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gateways      []*RegionalGateway     `protobuf:"bytes,1,rep,name=gateways,proto3" json:"gateways,omitempty"` // List of gateways matching the request criteria
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGatewaysResponse) Reset() {
	*x = ListGatewaysResponse{}
	mi := &file_manager_v1_manager_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGatewaysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGatewaysResponse) ProtoMessage() {}

func (x *ListGatewaysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGatewaysResponse.ProtoReflect.Descriptor instead.
func (*ListGatewaysResponse) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{21}
}

func (x *ListGatewaysResponse) GetGateways() []*RegionalGateway {
	if x != nil {
		return x.Gateways
	}
	return nil
}

// ReportAvailableEndpointsRequest reports BMC endpoints that a gateway can proxy
type ReportAvailableEndpointsRequest struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	GatewayId     string                     `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`          // Gateway identifier
	Region        string                     `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`                                 // Gateway region
	BmcEndpoints  []*BMCEndpointAvailability `protobuf:"bytes,3,rep,name=bmc_endpoints,json=bmcEndpoints,proto3" json:"bmc_endpoints,omitempty"` // BMC endpoints available through this gateway
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportAvailableEndpointsRequest) Reset() {
	*x = ReportAvailableEndpointsRequest{}
	mi := &file_manager_v1_manager_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportAvailableEndpointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportAvailableEndpointsRequest) ProtoMessage() {}

func (x *ReportAvailableEndpointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportAvailableEndpointsRequest.ProtoReflect.Descriptor instead.
func (*ReportAvailableEndpointsRequest) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{22}
}

func (x *ReportAvailableEndpointsRequest) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *ReportAvailableEndpointsRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *ReportAvailableEndpointsRequest) GetBmcEndpoints() []*BMCEndpointAvailability {
	if x != nil {
		return x.BmcEndpoints
	}
	return nil
}

// BMCEndpointAvailability describes a BMC endpoint available through a gateway
type BMCEndpointAvailability struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	BmcEndpoint       string                 `protobuf:"bytes,1,opt,name=bmc_endpoint,json=bmcEndpoint,proto3" json:"bmc_endpoint,omitempty"`                    // BMC endpoint (e.g., "192.168.1.100:623")
	AgentId           string                 `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`                                // Agent that provides access to this endpoint
	DatacenterId      string                 `protobuf:"bytes,3,opt,name=datacenter_id,json=datacenterId,proto3" json:"datacenter_id,omitempty"`                 // Datacenter containing this BMC
	BmcType           v1.BMCType             `protobuf:"varint,4,opt,name=bmc_type,json=bmcType,proto3,enum=common.v1.BMCType" json:"bmc_type,omitempty"`        // Type of BMC interface
	Features          []string               `protobuf:"bytes,5,rep,name=features,proto3" json:"features,omitempty"`                                             // Available features
	Status            string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`                                                 // Endpoint status
	LastSeen          *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`                             // When this endpoint was last verified
	Username          string                 `protobuf:"bytes,8,opt,name=username,proto3" json:"username,omitempty"`                                             // BMC username
	Capabilities      []string               `protobuf:"bytes,9,rep,name=capabilities,proto3" json:"capabilities,omitempty"`                                     // BMC capabilities
	DiscoveryMetadata *v1.DiscoveryMetadata  `protobuf:"bytes,10,opt,name=discovery_metadata,json=discoveryMetadata,proto3" json:"discovery_metadata,omitempty"` // Discovery metadata (RFD 017)
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *BMCEndpointAvailability) Reset() {
	*x = BMCEndpointAvailability{}
	mi := &file_manager_v1_manager_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BMCEndpointAvailability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BMCEndpointAvailability) ProtoMessage() {}

func (x *BMCEndpointAvailability) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BMCEndpointAvailability.ProtoReflect.Descriptor instead.
func (*BMCEndpointAvailability) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{23}
}

func (x *BMCEndpointAvailability) GetBmcEndpoint() string {
	if x != nil {
		return x.BmcEndpoint
	}
	return ""
}

func (x *BMCEndpointAvailability) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *BMCEndpointAvailability) GetDatacenterId() string {
	if x != nil {
		return x.DatacenterId
	}
	return ""
}

func (x *BMCEndpointAvailability) GetBmcType() v1.BMCType {
	if x != nil {
		return x.BmcType
	}
	return v1.BMCType(0)
}

func (x *BMCEndpointAvailability) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *BMCEndpointAvailability) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BMCEndpointAvailability) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *BMCEndpointAvailability) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *BMCEndpointAvailability) GetCapabilities() []string {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *BMCEndpointAvailability) GetDiscoveryMetadata() *v1.DiscoveryMetadata {
	if x != nil {
		return x.DiscoveryMetadata
	}
	return nil
}

// ReportAvailableEndpointsResponse confirms endpoint registration
type ReportAvailableEndpointsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportAvailableEndpointsResponse) Reset() {
	*x = ReportAvailableEndpointsResponse{}
	mi := &file_manager_v1_manager_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportAvailableEndpointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportAvailableEndpointsResponse) ProtoMessage() {}

func (x *ReportAvailableEndpointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportAvailableEndpointsResponse.ProtoReflect.Descriptor instead.
func (*ReportAvailableEndpointsResponse) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{24}
}

func (x *ReportAvailableEndpointsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReportAvailableEndpointsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// GetSystemStatusRequest queries the overall system status
type GetSystemStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSystemStatusRequest) Reset() {
	*x = GetSystemStatusRequest{}
	mi := &file_manager_v1_manager_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSystemStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemStatusRequest) ProtoMessage() {}

func (x *GetSystemStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemStatusRequest.ProtoReflect.Descriptor instead.
func (*GetSystemStatusRequest) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{25}
}

// GetSystemStatusResponse provides comprehensive system status
type GetSystemStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *SystemStatus          `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // Overall system status information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSystemStatusResponse) Reset() {
	*x = GetSystemStatusResponse{}
	mi := &file_manager_v1_manager_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSystemStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSystemStatusResponse) ProtoMessage() {}

func (x *GetSystemStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSystemStatusResponse.ProtoReflect.Descriptor instead.
func (*GetSystemStatusResponse) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{26}
}

func (x *GetSystemStatusResponse) GetStatus() *SystemStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

// SystemStatus contains comprehensive system state information
type SystemStatus struct {
	state          protoimpl.MessageState     `protogen:"open.v1"`
	Version        string                     `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`                                      // Manager service version
	StartedAt      *timestamppb.Timestamp     `protobuf:"bytes,2,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`                 // When the manager service started
	StatusTime     *timestamppb.Timestamp     `protobuf:"bytes,3,opt,name=status_time,json=statusTime,proto3" json:"status_time,omitempty"`              // When this status was generated
	TotalGateways  int32                      `protobuf:"varint,4,opt,name=total_gateways,json=totalGateways,proto3" json:"total_gateways,omitempty"`    // Total number of registered gateways
	ActiveGateways int32                      `protobuf:"varint,5,opt,name=active_gateways,json=activeGateways,proto3" json:"active_gateways,omitempty"` // Number of gateways that have reported recently
	TotalServers   int32                      `protobuf:"varint,6,opt,name=total_servers,json=totalServers,proto3" json:"total_servers,omitempty"`       // Total number of registered servers
	Gateways       []*GatewayStatus           `protobuf:"bytes,7,rep,name=gateways,proto3" json:"gateways,omitempty"`                                    // Detailed status of each gateway
	Servers        []*SystemStatusServerEntry `protobuf:"bytes,8,rep,name=servers,proto3" json:"servers,omitempty"`                                      // Summary of all servers across gateways
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SystemStatus) Reset() {
	*x = SystemStatus{}
	mi := &file_manager_v1_manager_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatus) ProtoMessage() {}

func (x *SystemStatus) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatus.ProtoReflect.Descriptor instead.
func (*SystemStatus) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{27}
}

func (x *SystemStatus) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SystemStatus) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *SystemStatus) GetStatusTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StatusTime
	}
	return nil
}

func (x *SystemStatus) GetTotalGateways() int32 {
	if x != nil {
		return x.TotalGateways
	}
	return 0
}

func (x *SystemStatus) GetActiveGateways() int32 {
	if x != nil {
		return x.ActiveGateways
	}
	return 0
}

func (x *SystemStatus) GetTotalServers() int32 {
	if x != nil {
		return x.TotalServers
	}
	return 0
}

func (x *SystemStatus) GetGateways() []*GatewayStatus {
	if x != nil {
		return x.Gateways
	}
	return nil
}

func (x *SystemStatus) GetServers() []*SystemStatusServerEntry {
	if x != nil {
		return x.Servers
	}
	return nil
}

// GatewayStatus provides detailed information about a specific gateway
type GatewayStatus struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Id            string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                            // Gateway identifier
	Region        string                     `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`                                    // Geographic region
	Endpoint      string                     `protobuf:"bytes,3,opt,name=endpoint,proto3" json:"endpoint,omitempty"`                                // Gateway endpoint URL
	DatacenterIds []string                   `protobuf:"bytes,4,rep,name=datacenter_ids,json=datacenterIds,proto3" json:"datacenter_ids,omitempty"` // Datacenters served by this gateway
	Status        string                     `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`                                    // Gateway status (e.g., "healthy", "degraded")
	LastSeen      *timestamppb.Timestamp     `protobuf:"bytes,6,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`                // Last time gateway registered/updated
	CreatedAt     *timestamppb.Timestamp     `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`             // When gateway was first registered
	ServerCount   int32                      `protobuf:"varint,8,opt,name=server_count,json=serverCount,proto3" json:"server_count,omitempty"`      // Number of servers registered through this gateway
	Servers       []*SystemStatusServerEntry `protobuf:"bytes,9,rep,name=servers,proto3" json:"servers,omitempty"`                                  // List of servers managed by this gateway
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GatewayStatus) Reset() {
	*x = GatewayStatus{}
	mi := &file_manager_v1_manager_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayStatus) ProtoMessage() {}

func (x *GatewayStatus) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayStatus.ProtoReflect.Descriptor instead.
func (*GatewayStatus) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{28}
}

func (x *GatewayStatus) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GatewayStatus) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *GatewayStatus) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *GatewayStatus) GetDatacenterIds() []string {
	if x != nil {
		return x.DatacenterIds
	}
	return nil
}

func (x *GatewayStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GatewayStatus) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *GatewayStatus) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GatewayStatus) GetServerCount() int32 {
	if x != nil {
		return x.ServerCount
	}
	return 0
}

func (x *GatewayStatus) GetServers() []*SystemStatusServerEntry {
	if x != nil {
		return x.Servers
	}
	return nil
}

// SystemStatusServerEntry provides server information for status display
type SystemStatusServerEntry struct {
	state             protoimpl.MessageState   `protogen:"open.v1"`
	ServerId          string                   `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`                                              // Server identifier
	CustomerId        string                   `protobuf:"bytes,2,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`                                        // Customer that owns this server
	DatacenterId      string                   `protobuf:"bytes,3,opt,name=datacenter_id,json=datacenterId,proto3" json:"datacenter_id,omitempty"`                                  // Physical datacenter location
	RegionalGatewayId string                   `protobuf:"bytes,4,opt,name=regional_gateway_id,json=regionalGatewayId,proto3" json:"regional_gateway_id,omitempty"`                 // Gateway managing this server
	Features          []string                 `protobuf:"bytes,5,rep,name=features,proto3" json:"features,omitempty"`                                                              // BMC capabilities
	CreatedAt         *timestamppb.Timestamp   `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                           // When server was registered
	UpdatedAt         *timestamppb.Timestamp   `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                                           // Last update time
	BmcProtocols      []*v1.BMCControlEndpoint `protobuf:"bytes,8,rep,name=bmc_protocols,json=bmcProtocols,proto3" json:"bmc_protocols,omitempty"`                                  // Multiple protocol support (required for RFD 006)
	PrimaryProtocol   v1.BMCType               `protobuf:"varint,9,opt,name=primary_protocol,json=primaryProtocol,proto3,enum=common.v1.BMCType" json:"primary_protocol,omitempty"` // Preferred protocol for operations
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SystemStatusServerEntry) Reset() {
	*x = SystemStatusServerEntry{}
	mi := &file_manager_v1_manager_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemStatusServerEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemStatusServerEntry) ProtoMessage() {}

func (x *SystemStatusServerEntry) ProtoReflect() protoreflect.Message {
	mi := &file_manager_v1_manager_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemStatusServerEntry.ProtoReflect.Descriptor instead.
func (*SystemStatusServerEntry) Descriptor() ([]byte, []int) {
	return file_manager_v1_manager_proto_rawDescGZIP(), []int{29}
}

func (x *SystemStatusServerEntry) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *SystemStatusServerEntry) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *SystemStatusServerEntry) GetDatacenterId() string {
	if x != nil {
		return x.DatacenterId
	}
	return ""
}

func (x *SystemStatusServerEntry) GetRegionalGatewayId() string {
	if x != nil {
		return x.RegionalGatewayId
	}
	return ""
}

func (x *SystemStatusServerEntry) GetFeatures() []string {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *SystemStatusServerEntry) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SystemStatusServerEntry) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SystemStatusServerEntry) GetBmcProtocols() []*v1.BMCControlEndpoint {
	if x != nil {
		return x.BmcProtocols
	}
	return nil
}

func (x *SystemStatusServerEntry) GetPrimaryProtocol() v1.BMCType {
	if x != nil {
		return x.PrimaryProtocol
	}
	return v1.BMCType(0)
}

var File_manager_v1_manager_proto protoreflect.FileDescriptor

const file_manager_v1_manager_proto_rawDesc = "" +
	"\n" +
	"\x18manager/v1/manager.proto\x12\n" +
	"manager.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19common/v1/discovery.proto\x1a\x16common/v1/server.proto\"k\n" +
	"\bCustomer\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x129\n" +
	"\n" +
	"created_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xd1\x05\n" +
	"\x06Server\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1f\n" +
	"\vcustomer_id\x18\x02 \x01(\tR\n" +
	"customerId\x12#\n" +
	"\rdatacenter_id\x18\x03 \x01(\tR\fdatacenterId\x12J\n" +
	"\x11control_endpoints\x18\x04 \x03(\v2\x1d.common.v1.BMCControlEndpointR\x10controlEndpoints\x12=\n" +
	"\x10primary_protocol\x18\x05 \x01(\x0e2\x12.common.v1.BMCTypeR\x0fprimaryProtocol\x129\n" +
	"\fsol_endpoint\x18\x06 \x01(\v2\x16.common.v1.SOLEndpointR\vsolEndpoint\x129\n" +
	"\fvnc_endpoint\x18\a \x01(\v2\x16.common.v1.VNCEndpointR\vvncEndpoint\x12\x1a\n" +
	"\bfeatures\x18\b \x03(\tR\bfeatures\x12\x16\n" +
	"\x06status\x18\t \x01(\tR\x06status\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12<\n" +
	"\bmetadata\x18\f \x03(\v2 .manager.v1.Server.MetadataEntryR\bmetadata\x12K\n" +
	"\x12discovery_metadata\x18\r \x01(\v2\x1c.common.v1.DiscoveryMetadataR\x11discoveryMetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb1\x02\n" +
	"\x0fRegionalGateway\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12\x1a\n" +
	"\bendpoint\x18\x03 \x01(\tR\bendpoint\x12%\n" +
	"\x0edatacenter_ids\x18\x04 \x03(\tR\rdatacenterIds\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x127\n" +
	"\tlast_seen\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12'\n" +
	"\x0fdelegated_token\x18\b \x01(\tR\x0edelegatedToken\"\xb8\x03\n" +
	"\x0eServerLocation\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x1f\n" +
	"\vcustomer_id\x18\x02 \x01(\tR\n" +
	"customerId\x12#\n" +
	"\rdatacenter_id\x18\x03 \x01(\tR\fdatacenterId\x12.\n" +
	"\x13regional_gateway_id\x18\x04 \x01(\tR\x11regionalGatewayId\x12\x1a\n" +
	"\bfeatures\x18\x05 \x03(\tR\bfeatures\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12B\n" +
	"\rbmc_protocols\x18\b \x03(\v2\x1d.common.v1.BMCControlEndpointR\fbmcProtocols\x12=\n" +
	"\x10primary_protocol\x18\t \x01(\x0e2\x12.common.v1.BMCTypeR\x0fprimaryProtocol\"G\n" +
	"\x13AuthenticateRequest\x12\x14\n" +
	"\x05email\x18\x01 \x01(\tR\x05email\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"\xcb\x01\n" +
	"\x14AuthenticateResponse\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x12#\n" +
	"\rrefresh_token\x18\x02 \x01(\tR\frefreshToken\x129\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\x120\n" +
	"\bcustomer\x18\x04 \x01(\v2\x14.manager.v1.CustomerR\bcustomer\"W\n" +
	"\x13RefreshTokenRequest\x12#\n" +
	"\rrefresh_token\x18\x01 \x01(\tR\frefreshToken\x12\x1b\n" +
	"\tserver_id\x18\x02 \x01(\tR\bserverId\"t\n" +
	"\x14RefreshTokenResponse\x12!\n" +
	"\faccess_token\x18\x01 \x01(\tR\vaccessToken\x129\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"4\n" +
	"\x15GetServerTokenRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\"i\n" +
	"\x16GetServerTokenResponse\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x129\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\texpiresAt\"\xc9\x02\n" +
	"\x15RegisterServerRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x1f\n" +
	"\vcustomer_id\x18\x02 \x01(\tR\n" +
	"customerId\x12#\n" +
	"\rdatacenter_id\x18\x03 \x01(\tR\fdatacenterId\x12.\n" +
	"\x13regional_gateway_id\x18\x04 \x01(\tR\x11regionalGatewayId\x12\x1a\n" +
	"\bfeatures\x18\x05 \x03(\tR\bfeatures\x12B\n" +
	"\rbmc_protocols\x18\x06 \x03(\v2\x1d.common.v1.BMCControlEndpointR\fbmcProtocols\x12=\n" +
	"\x10primary_protocol\x18\a \x01(\x0e2\x12.common.v1.BMCTypeR\x0fprimaryProtocol\"L\n" +
	"\x16RegisterServerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"/\n" +
	"\x10GetServerRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\"?\n" +
	"\x11GetServerResponse\x12*\n" +
	"\x06server\x18\x01 \x01(\v2\x12.manager.v1.ServerR\x06server\"P\n" +
	"\x12ListServersRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"k\n" +
	"\x13ListServersResponse\x12,\n" +
	"\aservers\x18\x01 \x03(\v2\x12.manager.v1.ServerR\aservers\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"7\n" +
	"\x18GetServerLocationRequest\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\"\xcb\x02\n" +
	"\x19GetServerLocationResponse\x12.\n" +
	"\x13regional_gateway_id\x18\x01 \x01(\tR\x11regionalGatewayId\x12:\n" +
	"\x19regional_gateway_endpoint\x18\x02 \x01(\tR\x17regionalGatewayEndpoint\x12#\n" +
	"\rdatacenter_id\x18\x03 \x01(\tR\fdatacenterId\x12\x1a\n" +
	"\bfeatures\x18\x04 \x03(\tR\bfeatures\x12B\n" +
	"\rbmc_protocols\x18\x05 \x03(\v2\x1d.common.v1.BMCControlEndpointR\fbmcProtocols\x12=\n" +
	"\x10primary_protocol\x18\x06 \x01(\x0e2\x12.common.v1.BMCTypeR\x0fprimaryProtocol\"\x92\x01\n" +
	"\x16RegisterGatewayRequest\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x01 \x01(\tR\tgatewayId\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12\x1a\n" +
	"\bendpoint\x18\x03 \x01(\tR\bendpoint\x12%\n" +
	"\x0edatacenter_ids\x18\x04 \x03(\tR\rdatacenterIds\"M\n" +
	"\x17RegisterGatewayResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"-\n" +
	"\x13ListGatewaysRequest\x12\x16\n" +
	"\x06region\x18\x01 \x01(\tR\x06region\"O\n" +
	"\x14ListGatewaysResponse\x127\n" +
	"\bgateways\x18\x01 \x03(\v2\x1b.manager.v1.RegionalGatewayR\bgateways\"\xa2\x01\n" +
	"\x1fReportAvailableEndpointsRequest\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x01 \x01(\tR\tgatewayId\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12H\n" +
	"\rbmc_endpoints\x18\x03 \x03(\v2#.manager.v1.BMCEndpointAvailabilityR\fbmcEndpoints\"\xa5\x03\n" +
	"\x17BMCEndpointAvailability\x12!\n" +
	"\fbmc_endpoint\x18\x01 \x01(\tR\vbmcEndpoint\x12\x19\n" +
	"\bagent_id\x18\x02 \x01(\tR\aagentId\x12#\n" +
	"\rdatacenter_id\x18\x03 \x01(\tR\fdatacenterId\x12-\n" +
	"\bbmc_type\x18\x04 \x01(\x0e2\x12.common.v1.BMCTypeR\abmcType\x12\x1a\n" +
	"\bfeatures\x18\x05 \x03(\tR\bfeatures\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x127\n" +
	"\tlast_seen\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x12\x1a\n" +
	"\busername\x18\b \x01(\tR\busername\x12\"\n" +
	"\fcapabilities\x18\t \x03(\tR\fcapabilities\x12K\n" +
	"\x12discovery_metadata\x18\n" +
	" \x01(\v2\x1c.common.v1.DiscoveryMetadataR\x11discoveryMetadata\"V\n" +
	" ReportAvailableEndpointsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x18\n" +
	"\x16GetSystemStatusRequest\"K\n" +
	"\x17GetSystemStatusResponse\x120\n" +
	"\x06status\x18\x01 \x01(\v2\x18.manager.v1.SystemStatusR\x06status\"\x8b\x03\n" +
	"\fSystemStatus\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x129\n" +
	"\n" +
	"started_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\x12;\n" +
	"\vstatus_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"statusTime\x12%\n" +
	"\x0etotal_gateways\x18\x04 \x01(\x05R\rtotalGateways\x12'\n" +
	"\x0factive_gateways\x18\x05 \x01(\x05R\x0eactiveGateways\x12#\n" +
	"\rtotal_servers\x18\x06 \x01(\x05R\ftotalServers\x125\n" +
	"\bgateways\x18\a \x03(\v2\x19.manager.v1.GatewayStatusR\bgateways\x12=\n" +
	"\aservers\x18\b \x03(\v2#.manager.v1.SystemStatusServerEntryR\aservers\"\xe8\x02\n" +
	"\rGatewayStatus\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06region\x18\x02 \x01(\tR\x06region\x12\x1a\n" +
	"\bendpoint\x18\x03 \x01(\tR\bendpoint\x12%\n" +
	"\x0edatacenter_ids\x18\x04 \x03(\tR\rdatacenterIds\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x127\n" +
	"\tlast_seen\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12!\n" +
	"\fserver_count\x18\b \x01(\x05R\vserverCount\x12=\n" +
	"\aservers\x18\t \x03(\v2#.manager.v1.SystemStatusServerEntryR\aservers\"\xc1\x03\n" +
	"\x17SystemStatusServerEntry\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x1f\n" +
	"\vcustomer_id\x18\x02 \x01(\tR\n" +
	"customerId\x12#\n" +
	"\rdatacenter_id\x18\x03 \x01(\tR\fdatacenterId\x12.\n" +
	"\x13regional_gateway_id\x18\x04 \x01(\tR\x11regionalGatewayId\x12\x1a\n" +
	"\bfeatures\x18\x05 \x03(\tR\bfeatures\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12B\n" +
	"\rbmc_protocols\x18\b \x03(\v2\x1d.common.v1.BMCControlEndpointR\fbmcProtocols\x12=\n" +
	"\x10primary_protocol\x18\t \x01(\x0e2\x12.common.v1.BMCTypeR\x0fprimaryProtocol2\xe9\a\n" +
	"\x11BMCManagerService\x12Q\n" +
	"\fAuthenticate\x12\x1f.manager.v1.AuthenticateRequest\x1a .manager.v1.AuthenticateResponse\x12Q\n" +
	"\fRefreshToken\x12\x1f.manager.v1.RefreshTokenRequest\x1a .manager.v1.RefreshTokenResponse\x12W\n" +
	"\x0eGetServerToken\x12!.manager.v1.GetServerTokenRequest\x1a\".manager.v1.GetServerTokenResponse\x12W\n" +
	"\x0eRegisterServer\x12!.manager.v1.RegisterServerRequest\x1a\".manager.v1.RegisterServerResponse\x12`\n" +
	"\x11GetServerLocation\x12$.manager.v1.GetServerLocationRequest\x1a%.manager.v1.GetServerLocationResponse\x12Z\n" +
	"\x0fRegisterGateway\x12\".manager.v1.RegisterGatewayRequest\x1a#.manager.v1.RegisterGatewayResponse\x12Q\n" +
	"\fListGateways\x12\x1f.manager.v1.ListGatewaysRequest\x1a .manager.v1.ListGatewaysResponse\x12Z\n" +
	"\x0fGetSystemStatus\x12\".manager.v1.GetSystemStatusRequest\x1a#.manager.v1.GetSystemStatusResponse\x12H\n" +
	"\tGetServer\x12\x1c.manager.v1.GetServerRequest\x1a\x1d.manager.v1.GetServerResponse\x12N\n" +
	"\vListServers\x12\x1e.manager.v1.ListServersRequest\x1a\x1f.manager.v1.ListServersResponse\x12u\n" +
	"\x18ReportAvailableEndpoints\x12+.manager.v1.ReportAvailableEndpointsRequest\x1a,.manager.v1.ReportAvailableEndpointsResponseB\"Z manager/gen/manager/v1;managerv1b\x06proto3"

var (
	file_manager_v1_manager_proto_rawDescOnce sync.Once
	file_manager_v1_manager_proto_rawDescData []byte
)

func file_manager_v1_manager_proto_rawDescGZIP() []byte {
	file_manager_v1_manager_proto_rawDescOnce.Do(func() {
		file_manager_v1_manager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_manager_v1_manager_proto_rawDesc), len(file_manager_v1_manager_proto_rawDesc)))
	})
	return file_manager_v1_manager_proto_rawDescData
}

var file_manager_v1_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_manager_v1_manager_proto_goTypes = []any{
	(*Customer)(nil),                         // 0: manager.v1.Customer
	(*Server)(nil),                           // 1: manager.v1.Server
	(*RegionalGateway)(nil),                  // 2: manager.v1.RegionalGateway
	(*ServerLocation)(nil),                   // 3: manager.v1.ServerLocation
	(*AuthenticateRequest)(nil),              // 4: manager.v1.AuthenticateRequest
	(*AuthenticateResponse)(nil),             // 5: manager.v1.AuthenticateResponse
	(*RefreshTokenRequest)(nil),              // 6: manager.v1.RefreshTokenRequest
	(*RefreshTokenResponse)(nil),             // 7: manager.v1.RefreshTokenResponse
	(*GetServerTokenRequest)(nil),            // 8: manager.v1.GetServerTokenRequest
	(*GetServerTokenResponse)(nil),           // 9: manager.v1.GetServerTokenResponse
	(*RegisterServerRequest)(nil),            // 10: manager.v1.RegisterServerRequest
	(*RegisterServerResponse)(nil),           // 11: manager.v1.RegisterServerResponse
	(*GetServerRequest)(nil),                 // 12: manager.v1.GetServerRequest
	(*GetServerResponse)(nil),                // 13: manager.v1.GetServerResponse
	(*ListServersRequest)(nil),               // 14: manager.v1.ListServersRequest
	(*ListServersResponse)(nil),              // 15: manager.v1.ListServersResponse
	(*GetServerLocationRequest)(nil),         // 16: manager.v1.GetServerLocationRequest
	(*GetServerLocationResponse)(nil),        // 17: manager.v1.GetServerLocationResponse
	(*RegisterGatewayRequest)(nil),           // 18: manager.v1.RegisterGatewayRequest
	(*RegisterGatewayResponse)(nil),          // 19: manager.v1.RegisterGatewayResponse
	(*ListGatewaysRequest)(nil),              // 20: manager.v1.ListGatewaysRequest
	(*ListGatewaysResponse)(nil),             // 21: manager.v1.ListGatewaysResponse
	(*ReportAvailableEndpointsRequest)(nil),  // 22: manager.v1.ReportAvailableEndpointsRequest
	(*BMCEndpointAvailability)(nil),          // 23: manager.v1.BMCEndpointAvailability
	(*ReportAvailableEndpointsResponse)(nil), // 24: manager.v1.ReportAvailableEndpointsResponse
	(*GetSystemStatusRequest)(nil),           // 25: manager.v1.GetSystemStatusRequest
	(*GetSystemStatusResponse)(nil),          // 26: manager.v1.GetSystemStatusResponse
	(*SystemStatus)(nil),                     // 27: manager.v1.SystemStatus
	(*GatewayStatus)(nil),                    // 28: manager.v1.GatewayStatus
	(*SystemStatusServerEntry)(nil),          // 29: manager.v1.SystemStatusServerEntry
	nil,                                      // 30: manager.v1.Server.MetadataEntry
	(*timestamppb.Timestamp)(nil),            // 31: google.protobuf.Timestamp
	(*v1.BMCControlEndpoint)(nil),            // 32: common.v1.BMCControlEndpoint
	(v1.BMCType)(0),                          // 33: common.v1.BMCType
	(*v1.SOLEndpoint)(nil),                   // 34: common.v1.SOLEndpoint
	(*v1.VNCEndpoint)(nil),                   // 35: common.v1.VNCEndpoint
	(*v1.DiscoveryMetadata)(nil),             // 36: common.v1.DiscoveryMetadata
}
var file_manager_v1_manager_proto_depIdxs = []int32{
	31, // 0: manager.v1.Customer.created_at:type_name -> google.protobuf.Timestamp
	32, // 1: manager.v1.Server.control_endpoints:type_name -> common.v1.BMCControlEndpoint
	33, // 2: manager.v1.Server.primary_protocol:type_name -> common.v1.BMCType
	34, // 3: manager.v1.Server.sol_endpoint:type_name -> common.v1.SOLEndpoint
	35, // 4: manager.v1.Server.vnc_endpoint:type_name -> common.v1.VNCEndpoint
	31, // 5: manager.v1.Server.created_at:type_name -> google.protobuf.Timestamp
	31, // 6: manager.v1.Server.updated_at:type_name -> google.protobuf.Timestamp
	30, // 7: manager.v1.Server.metadata:type_name -> manager.v1.Server.MetadataEntry
	36, // 8: manager.v1.Server.discovery_metadata:type_name -> common.v1.DiscoveryMetadata
	31, // 9: manager.v1.RegionalGateway.last_seen:type_name -> google.protobuf.Timestamp
	31, // 10: manager.v1.RegionalGateway.created_at:type_name -> google.protobuf.Timestamp
	31, // 11: manager.v1.ServerLocation.created_at:type_name -> google.protobuf.Timestamp
	31, // 12: manager.v1.ServerLocation.updated_at:type_name -> google.protobuf.Timestamp
	32, // 13: manager.v1.ServerLocation.bmc_protocols:type_name -> common.v1.BMCControlEndpoint
	33, // 14: manager.v1.ServerLocation.primary_protocol:type_name -> common.v1.BMCType
	31, // 15: manager.v1.AuthenticateResponse.expires_at:type_name -> google.protobuf.Timestamp
	0,  // 16: manager.v1.AuthenticateResponse.customer:type_name -> manager.v1.Customer
	31, // 17: manager.v1.RefreshTokenResponse.expires_at:type_name -> google.protobuf.Timestamp
	31, // 18: manager.v1.GetServerTokenResponse.expires_at:type_name -> google.protobuf.Timestamp
	32, // 19: manager.v1.RegisterServerRequest.bmc_protocols:type_name -> common.v1.BMCControlEndpoint
	33, // 20: manager.v1.RegisterServerRequest.primary_protocol:type_name -> common.v1.BMCType
	1,  // 21: manager.v1.GetServerResponse.server:type_name -> manager.v1.Server
	1,  // 22: manager.v1.ListServersResponse.servers:type_name -> manager.v1.Server
	32, // 23: manager.v1.GetServerLocationResponse.bmc_protocols:type_name -> common.v1.BMCControlEndpoint
	33, // 24: manager.v1.GetServerLocationResponse.primary_protocol:type_name -> common.v1.BMCType
	2,  // 25: manager.v1.ListGatewaysResponse.gateways:type_name -> manager.v1.RegionalGateway
	23, // 26: manager.v1.ReportAvailableEndpointsRequest.bmc_endpoints:type_name -> manager.v1.BMCEndpointAvailability
	33, // 27: manager.v1.BMCEndpointAvailability.bmc_type:type_name -> common.v1.BMCType
	31, // 28: manager.v1.BMCEndpointAvailability.last_seen:type_name -> google.protobuf.Timestamp
	36, // 29: manager.v1.BMCEndpointAvailability.discovery_metadata:type_name -> common.v1.DiscoveryMetadata
	27, // 30: manager.v1.GetSystemStatusResponse.status:type_name -> manager.v1.SystemStatus
	31, // 31: manager.v1.SystemStatus.started_at:type_name -> google.protobuf.Timestamp
	31, // 32: manager.v1.SystemStatus.status_time:type_name -> google.protobuf.Timestamp
	28, // 33: manager.v1.SystemStatus.gateways:type_name -> manager.v1.GatewayStatus
	29, // 34: manager.v1.SystemStatus.servers:type_name -> manager.v1.SystemStatusServerEntry
	31, // 35: manager.v1.GatewayStatus.last_seen:type_name -> google.protobuf.Timestamp
	31, // 36: manager.v1.GatewayStatus.created_at:type_name -> google.protobuf.Timestamp
	29, // 37: manager.v1.GatewayStatus.servers:type_name -> manager.v1.SystemStatusServerEntry
	31, // 38: manager.v1.SystemStatusServerEntry.created_at:type_name -> google.protobuf.Timestamp
	31, // 39: manager.v1.SystemStatusServerEntry.updated_at:type_name -> google.protobuf.Timestamp
	32, // 40: manager.v1.SystemStatusServerEntry.bmc_protocols:type_name -> common.v1.BMCControlEndpoint
	33, // 41: manager.v1.SystemStatusServerEntry.primary_protocol:type_name -> common.v1.BMCType
	4,  // 42: manager.v1.BMCManagerService.Authenticate:input_type -> manager.v1.AuthenticateRequest
	6,  // 43: manager.v1.BMCManagerService.RefreshToken:input_type -> manager.v1.RefreshTokenRequest
	8,  // 44: manager.v1.BMCManagerService.GetServerToken:input_type -> manager.v1.GetServerTokenRequest
	10, // 45: manager.v1.BMCManagerService.RegisterServer:input_type -> manager.v1.RegisterServerRequest
	16, // 46: manager.v1.BMCManagerService.GetServerLocation:input_type -> manager.v1.GetServerLocationRequest
	18, // 47: manager.v1.BMCManagerService.RegisterGateway:input_type -> manager.v1.RegisterGatewayRequest
	20, // 48: manager.v1.BMCManagerService.ListGateways:input_type -> manager.v1.ListGatewaysRequest
	25, // 49: manager.v1.BMCManagerService.GetSystemStatus:input_type -> manager.v1.GetSystemStatusRequest
	12, // 50: manager.v1.BMCManagerService.GetServer:input_type -> manager.v1.GetServerRequest
	14, // 51: manager.v1.BMCManagerService.ListServers:input_type -> manager.v1.ListServersRequest
	22, // 52: manager.v1.BMCManagerService.ReportAvailableEndpoints:input_type -> manager.v1.ReportAvailableEndpointsRequest
	5,  // 53: manager.v1.BMCManagerService.Authenticate:output_type -> manager.v1.AuthenticateResponse
	7,  // 54: manager.v1.BMCManagerService.RefreshToken:output_type -> manager.v1.RefreshTokenResponse
	9,  // 55: manager.v1.BMCManagerService.GetServerToken:output_type -> manager.v1.GetServerTokenResponse
	11, // 56: manager.v1.BMCManagerService.RegisterServer:output_type -> manager.v1.RegisterServerResponse
	17, // 57: manager.v1.BMCManagerService.GetServerLocation:output_type -> manager.v1.GetServerLocationResponse
	19, // 58: manager.v1.BMCManagerService.RegisterGateway:output_type -> manager.v1.RegisterGatewayResponse
	21, // 59: manager.v1.BMCManagerService.ListGateways:output_type -> manager.v1.ListGatewaysResponse
	26, // 60: manager.v1.BMCManagerService.GetSystemStatus:output_type -> manager.v1.GetSystemStatusResponse
	13, // 61: manager.v1.BMCManagerService.GetServer:output_type -> manager.v1.GetServerResponse
	15, // 62: manager.v1.BMCManagerService.ListServers:output_type -> manager.v1.ListServersResponse
	24, // 63: manager.v1.BMCManagerService.ReportAvailableEndpoints:output_type -> manager.v1.ReportAvailableEndpointsResponse
	53, // [53:64] is the sub-list for method output_type
	42, // [42:53] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_manager_v1_manager_proto_init() }
func file_manager_v1_manager_proto_init() {
	if File_manager_v1_manager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_manager_v1_manager_proto_rawDesc), len(file_manager_v1_manager_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_manager_v1_manager_proto_goTypes,
		DependencyIndexes: file_manager_v1_manager_proto_depIdxs,
		MessageInfos:      file_manager_v1_manager_proto_msgTypes,
	}.Build()
	File_manager_v1_manager_proto = out.File
	file_manager_v1_manager_proto_goTypes = nil
	file_manager_v1_manager_proto_depIdxs = nil
}
