// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: common/v1/discovery.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DiscoveryMethod represents how a BMC was discovered
type DiscoveryMethod int32

const (
	DiscoveryMethod_DISCOVERY_METHOD_UNSPECIFIED      DiscoveryMethod = 0
	DiscoveryMethod_DISCOVERY_METHOD_STATIC_CONFIG    DiscoveryMethod = 1 // From agent config file
	DiscoveryMethod_DISCOVERY_METHOD_NETWORK_SCAN     DiscoveryMethod = 2 // Auto-discovered via network scan
	DiscoveryMethod_DISCOVERY_METHOD_API_REGISTRATION DiscoveryMethod = 3 // Registered via API
	DiscoveryMethod_DISCOVERY_METHOD_MANUAL           DiscoveryMethod = 4 // Manually added by admin
)

// Enum value maps for DiscoveryMethod.
var (
	DiscoveryMethod_name = map[int32]string{
		0: "DISCOVERY_METHOD_UNSPECIFIED",
		1: "DISCOVERY_METHOD_STATIC_CONFIG",
		2: "DISCOVERY_METHOD_NETWORK_SCAN",
		3: "DISCOVERY_METHOD_API_REGISTRATION",
		4: "DISCOVERY_METHOD_MANUAL",
	}
	DiscoveryMethod_value = map[string]int32{
		"DISCOVERY_METHOD_UNSPECIFIED":      0,
		"DISCOVERY_METHOD_STATIC_CONFIG":    1,
		"DISCOVERY_METHOD_NETWORK_SCAN":     2,
		"DISCOVERY_METHOD_API_REGISTRATION": 3,
		"DISCOVERY_METHOD_MANUAL":           4,
	}
)

func (x DiscoveryMethod) Enum() *DiscoveryMethod {
	p := new(DiscoveryMethod)
	*p = x
	return p
}

func (x DiscoveryMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DiscoveryMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_common_v1_discovery_proto_enumTypes[0].Descriptor()
}

func (DiscoveryMethod) Type() protoreflect.EnumType {
	return &file_common_v1_discovery_proto_enumTypes[0]
}

func (x DiscoveryMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DiscoveryMethod.Descriptor instead.
func (DiscoveryMethod) EnumDescriptor() ([]byte, []int) {
	return file_common_v1_discovery_proto_rawDescGZIP(), []int{0}
}

// DiscoveryMetadata contains detailed information about how a BMC was discovered and configured
type DiscoveryMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Discovery information
	DiscoveryMethod DiscoveryMethod        `protobuf:"varint,1,opt,name=discovery_method,json=discoveryMethod,proto3,enum=common.v1.DiscoveryMethod" json:"discovery_method,omitempty"`
	DiscoveredAt    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=discovered_at,json=discoveredAt,proto3" json:"discovered_at,omitempty"`
	DiscoverySource string                 `protobuf:"bytes,3,opt,name=discovery_source,json=discoverySource,proto3" json:"discovery_source,omitempty"` // Agent ID that discovered this BMC
	ConfigSource    string                 `protobuf:"bytes,4,opt,name=config_source,json=configSource,proto3" json:"config_source,omitempty"`          // Config file path or API endpoint
	// Vendor information
	Vendor *VendorInfo `protobuf:"bytes,5,opt,name=vendor,proto3" json:"vendor,omitempty"`
	// Protocol configuration
	Protocol *ProtocolConfig `protobuf:"bytes,6,opt,name=protocol,proto3" json:"protocol,omitempty"`
	// Endpoint details
	Endpoints *EndpointDetails `protobuf:"bytes,7,opt,name=endpoints,proto3" json:"endpoints,omitempty"`
	// Security configuration
	Security *SecurityConfig `protobuf:"bytes,8,opt,name=security,proto3" json:"security,omitempty"`
	// Network information
	Network *NetworkInfo `protobuf:"bytes,9,opt,name=network,proto3" json:"network,omitempty"`
	// Capability discovery
	Capabilities *CapabilityInfo `protobuf:"bytes,10,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	// Additional metadata
	AdditionalInfo map[string]string `protobuf:"bytes,11,rep,name=additional_info,json=additionalInfo,proto3" json:"additional_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DiscoveryMetadata) Reset() {
	*x = DiscoveryMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_discovery_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveryMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryMetadata) ProtoMessage() {}

func (x *DiscoveryMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_discovery_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryMetadata.ProtoReflect.Descriptor instead.
func (*DiscoveryMetadata) Descriptor() ([]byte, []int) {
	return file_common_v1_discovery_proto_rawDescGZIP(), []int{0}
}

func (x *DiscoveryMetadata) GetDiscoveryMethod() DiscoveryMethod {
	if x != nil {
		return x.DiscoveryMethod
	}
	return DiscoveryMethod_DISCOVERY_METHOD_UNSPECIFIED
}

func (x *DiscoveryMetadata) GetDiscoveredAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DiscoveredAt
	}
	return nil
}

func (x *DiscoveryMetadata) GetDiscoverySource() string {
	if x != nil {
		return x.DiscoverySource
	}
	return ""
}

func (x *DiscoveryMetadata) GetConfigSource() string {
	if x != nil {
		return x.ConfigSource
	}
	return ""
}

func (x *DiscoveryMetadata) GetVendor() *VendorInfo {
	if x != nil {
		return x.Vendor
	}
	return nil
}

func (x *DiscoveryMetadata) GetProtocol() *ProtocolConfig {
	if x != nil {
		return x.Protocol
	}
	return nil
}

func (x *DiscoveryMetadata) GetEndpoints() *EndpointDetails {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *DiscoveryMetadata) GetSecurity() *SecurityConfig {
	if x != nil {
		return x.Security
	}
	return nil
}

func (x *DiscoveryMetadata) GetNetwork() *NetworkInfo {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *DiscoveryMetadata) GetCapabilities() *CapabilityInfo {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *DiscoveryMetadata) GetAdditionalInfo() map[string]string {
	if x != nil {
		return x.AdditionalInfo
	}
	return nil
}

// VendorInfo contains BMC vendor/hardware information
type VendorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Manufacturer    string `protobuf:"bytes,1,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Model           string `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`
	FirmwareVersion string `protobuf:"bytes,3,opt,name=firmware_version,json=firmwareVersion,proto3" json:"firmware_version,omitempty"`
	BmcVersion      string `protobuf:"bytes,4,opt,name=bmc_version,json=bmcVersion,proto3" json:"bmc_version,omitempty"`
}

func (x *VendorInfo) Reset() {
	*x = VendorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_discovery_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VendorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VendorInfo) ProtoMessage() {}

func (x *VendorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_discovery_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VendorInfo.ProtoReflect.Descriptor instead.
func (*VendorInfo) Descriptor() ([]byte, []int) {
	return file_common_v1_discovery_proto_rawDescGZIP(), []int{1}
}

func (x *VendorInfo) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *VendorInfo) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *VendorInfo) GetFirmwareVersion() string {
	if x != nil {
		return x.FirmwareVersion
	}
	return ""
}

func (x *VendorInfo) GetBmcVersion() string {
	if x != nil {
		return x.BmcVersion
	}
	return ""
}

// ProtocolConfig contains protocol-specific configuration
type ProtocolConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrimaryProtocol  string `protobuf:"bytes,1,opt,name=primary_protocol,json=primaryProtocol,proto3" json:"primary_protocol,omitempty"`    // "ipmi" or "redfish"
	PrimaryVersion   string `protobuf:"bytes,2,opt,name=primary_version,json=primaryVersion,proto3" json:"primary_version,omitempty"`       // "2.0", "1.6.0"
	FallbackProtocol string `protobuf:"bytes,3,opt,name=fallback_protocol,json=fallbackProtocol,proto3" json:"fallback_protocol,omitempty"` // "ipmi" or empty
	FallbackReason   string `protobuf:"bytes,4,opt,name=fallback_reason,json=fallbackReason,proto3" json:"fallback_reason,omitempty"`       // Why fallback is needed
	ConsoleType      string `protobuf:"bytes,5,opt,name=console_type,json=consoleType,proto3" json:"console_type,omitempty"`                // "ipmi", "redfish_serial"
	ConsolePath      string `protobuf:"bytes,6,opt,name=console_path,json=consolePath,proto3" json:"console_path,omitempty"`                // Redfish path to SerialConsole
	VncTransport     string `protobuf:"bytes,7,opt,name=vnc_transport,json=vncTransport,proto3" json:"vnc_transport,omitempty"`             // "native", "websocket"
}

func (x *ProtocolConfig) Reset() {
	*x = ProtocolConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_discovery_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtocolConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtocolConfig) ProtoMessage() {}

func (x *ProtocolConfig) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_discovery_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtocolConfig.ProtoReflect.Descriptor instead.
func (*ProtocolConfig) Descriptor() ([]byte, []int) {
	return file_common_v1_discovery_proto_rawDescGZIP(), []int{2}
}

func (x *ProtocolConfig) GetPrimaryProtocol() string {
	if x != nil {
		return x.PrimaryProtocol
	}
	return ""
}

func (x *ProtocolConfig) GetPrimaryVersion() string {
	if x != nil {
		return x.PrimaryVersion
	}
	return ""
}

func (x *ProtocolConfig) GetFallbackProtocol() string {
	if x != nil {
		return x.FallbackProtocol
	}
	return ""
}

func (x *ProtocolConfig) GetFallbackReason() string {
	if x != nil {
		return x.FallbackReason
	}
	return ""
}

func (x *ProtocolConfig) GetConsoleType() string {
	if x != nil {
		return x.ConsoleType
	}
	return ""
}

func (x *ProtocolConfig) GetConsolePath() string {
	if x != nil {
		return x.ConsolePath
	}
	return ""
}

func (x *ProtocolConfig) GetVncTransport() string {
	if x != nil {
		return x.VncTransport
	}
	return ""
}

// EndpointDetails contains endpoint configuration information
type EndpointDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlEndpoint string `protobuf:"bytes,1,opt,name=control_endpoint,json=controlEndpoint,proto3" json:"control_endpoint,omitempty"`
	ControlScheme   string `protobuf:"bytes,2,opt,name=control_scheme,json=controlScheme,proto3" json:"control_scheme,omitempty"` // "https", "http", "ipmi"
	ControlPort     int32  `protobuf:"varint,3,opt,name=control_port,json=controlPort,proto3" json:"control_port,omitempty"`
	ConsoleEndpoint string `protobuf:"bytes,4,opt,name=console_endpoint,json=consoleEndpoint,proto3" json:"console_endpoint,omitempty"`
	VncEndpoint     string `protobuf:"bytes,5,opt,name=vnc_endpoint,json=vncEndpoint,proto3" json:"vnc_endpoint,omitempty"`
	VncDisplay      int32  `protobuf:"varint,6,opt,name=vnc_display,json=vncDisplay,proto3" json:"vnc_display,omitempty"` // VNC display number
}

func (x *EndpointDetails) Reset() {
	*x = EndpointDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_discovery_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndpointDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndpointDetails) ProtoMessage() {}

func (x *EndpointDetails) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_discovery_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndpointDetails.ProtoReflect.Descriptor instead.
func (*EndpointDetails) Descriptor() ([]byte, []int) {
	return file_common_v1_discovery_proto_rawDescGZIP(), []int{3}
}

func (x *EndpointDetails) GetControlEndpoint() string {
	if x != nil {
		return x.ControlEndpoint
	}
	return ""
}

func (x *EndpointDetails) GetControlScheme() string {
	if x != nil {
		return x.ControlScheme
	}
	return ""
}

func (x *EndpointDetails) GetControlPort() int32 {
	if x != nil {
		return x.ControlPort
	}
	return 0
}

func (x *EndpointDetails) GetConsoleEndpoint() string {
	if x != nil {
		return x.ConsoleEndpoint
	}
	return ""
}

func (x *EndpointDetails) GetVncEndpoint() string {
	if x != nil {
		return x.VncEndpoint
	}
	return ""
}

func (x *EndpointDetails) GetVncDisplay() int32 {
	if x != nil {
		return x.VncDisplay
	}
	return 0
}

// SecurityConfig contains security-related configuration
type SecurityConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TlsEnabled        bool   `protobuf:"varint,1,opt,name=tls_enabled,json=tlsEnabled,proto3" json:"tls_enabled,omitempty"`
	TlsVerify         bool   `protobuf:"varint,2,opt,name=tls_verify,json=tlsVerify,proto3" json:"tls_verify,omitempty"`
	AuthMethod        string `protobuf:"bytes,3,opt,name=auth_method,json=authMethod,proto3" json:"auth_method,omitempty"`      // "basic", "session", "digest"
	VncAuthType       string `protobuf:"bytes,4,opt,name=vnc_auth_type,json=vncAuthType,proto3" json:"vnc_auth_type,omitempty"` // "password", "vencrypt", "none"
	VncPasswordLength int32  `protobuf:"varint,5,opt,name=vnc_password_length,json=vncPasswordLength,proto3" json:"vnc_password_length,omitempty"`
	IpmiCipherSuite   string `protobuf:"bytes,6,opt,name=ipmi_cipher_suite,json=ipmiCipherSuite,proto3" json:"ipmi_cipher_suite,omitempty"`
}

func (x *SecurityConfig) Reset() {
	*x = SecurityConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_discovery_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecurityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecurityConfig) ProtoMessage() {}

func (x *SecurityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_discovery_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecurityConfig.ProtoReflect.Descriptor instead.
func (*SecurityConfig) Descriptor() ([]byte, []int) {
	return file_common_v1_discovery_proto_rawDescGZIP(), []int{4}
}

func (x *SecurityConfig) GetTlsEnabled() bool {
	if x != nil {
		return x.TlsEnabled
	}
	return false
}

func (x *SecurityConfig) GetTlsVerify() bool {
	if x != nil {
		return x.TlsVerify
	}
	return false
}

func (x *SecurityConfig) GetAuthMethod() string {
	if x != nil {
		return x.AuthMethod
	}
	return ""
}

func (x *SecurityConfig) GetVncAuthType() string {
	if x != nil {
		return x.VncAuthType
	}
	return ""
}

func (x *SecurityConfig) GetVncPasswordLength() int32 {
	if x != nil {
		return x.VncPasswordLength
	}
	return 0
}

func (x *SecurityConfig) GetIpmiCipherSuite() string {
	if x != nil {
		return x.IpmiCipherSuite
	}
	return ""
}

// NetworkInfo contains network-related information
type NetworkInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddress      string `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	MacAddress     string `protobuf:"bytes,2,opt,name=mac_address,json=macAddress,proto3" json:"mac_address,omitempty"`
	NetworkSegment string `protobuf:"bytes,3,opt,name=network_segment,json=networkSegment,proto3" json:"network_segment,omitempty"`
	VlanId         string `protobuf:"bytes,4,opt,name=vlan_id,json=vlanId,proto3" json:"vlan_id,omitempty"`
	Reachable      bool   `protobuf:"varint,5,opt,name=reachable,proto3" json:"reachable,omitempty"`
	LatencyMs      int32  `protobuf:"varint,6,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"` // Ping latency from agent
}

func (x *NetworkInfo) Reset() {
	*x = NetworkInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_discovery_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NetworkInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkInfo) ProtoMessage() {}

func (x *NetworkInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_discovery_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkInfo.ProtoReflect.Descriptor instead.
func (*NetworkInfo) Descriptor() ([]byte, []int) {
	return file_common_v1_discovery_proto_rawDescGZIP(), []int{5}
}

func (x *NetworkInfo) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *NetworkInfo) GetMacAddress() string {
	if x != nil {
		return x.MacAddress
	}
	return ""
}

func (x *NetworkInfo) GetNetworkSegment() string {
	if x != nil {
		return x.NetworkSegment
	}
	return ""
}

func (x *NetworkInfo) GetVlanId() string {
	if x != nil {
		return x.VlanId
	}
	return ""
}

func (x *NetworkInfo) GetReachable() bool {
	if x != nil {
		return x.Reachable
	}
	return false
}

func (x *NetworkInfo) GetLatencyMs() int32 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

// CapabilityInfo contains discovered capabilities
type CapabilityInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SupportedFeatures   []string `protobuf:"bytes,1,rep,name=supported_features,json=supportedFeatures,proto3" json:"supported_features,omitempty"`
	UnsupportedFeatures []string `protobuf:"bytes,2,rep,name=unsupported_features,json=unsupportedFeatures,proto3" json:"unsupported_features,omitempty"`
	DiscoveryErrors     []string `protobuf:"bytes,3,rep,name=discovery_errors,json=discoveryErrors,proto3" json:"discovery_errors,omitempty"`
	DiscoveryWarnings   []string `protobuf:"bytes,4,rep,name=discovery_warnings,json=discoveryWarnings,proto3" json:"discovery_warnings,omitempty"`
}

func (x *CapabilityInfo) Reset() {
	*x = CapabilityInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_v1_discovery_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CapabilityInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilityInfo) ProtoMessage() {}

func (x *CapabilityInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_v1_discovery_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilityInfo.ProtoReflect.Descriptor instead.
func (*CapabilityInfo) Descriptor() ([]byte, []int) {
	return file_common_v1_discovery_proto_rawDescGZIP(), []int{6}
}

func (x *CapabilityInfo) GetSupportedFeatures() []string {
	if x != nil {
		return x.SupportedFeatures
	}
	return nil
}

func (x *CapabilityInfo) GetUnsupportedFeatures() []string {
	if x != nil {
		return x.UnsupportedFeatures
	}
	return nil
}

func (x *CapabilityInfo) GetDiscoveryErrors() []string {
	if x != nil {
		return x.DiscoveryErrors
	}
	return nil
}

func (x *CapabilityInfo) GetDiscoveryWarnings() []string {
	if x != nil {
		return x.DiscoveryWarnings
	}
	return nil
}

var File_common_v1_discovery_proto protoreflect.FileDescriptor

var file_common_v1_discovery_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd1, 0x05, 0x0a, 0x11, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a,
	0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x76, 0x65,
	0x6e, 0x64, 0x6f, 0x72, 0x12, 0x35, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x38, 0x0a, 0x09, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x08, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x07,
	0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72,
	0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x3d,
	0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x59, 0x0a,
	0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x41, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x92, 0x01, 0x0a, 0x0a,
	0x56, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61,
	0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x66, 0x69, 0x72, 0x6d, 0x77, 0x61, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x62, 0x6d, 0x63, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6d, 0x63, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0xa5, 0x02, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70,
	0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x66, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x66,
	0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x76, 0x6e, 0x63, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x6e, 0x63, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x22, 0xf5, 0x01, 0x0a, 0x0f, 0x45, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x29, 0x0a, 0x10,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x45,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x5f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6f, 0x72,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x5f, 0x65, 0x6e, 0x64,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x73, 0x6f, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x76, 0x6e, 0x63, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x76, 0x6e, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x76, 0x6e, 0x63, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x76, 0x6e, 0x63, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x22, 0xf1, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6c, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x74, 0x6c, 0x73, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6c, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x6c, 0x73, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x76, 0x6e, 0x63, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6e, 0x63,
	0x41, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x76, 0x6e, 0x63, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x76, 0x6e, 0x63, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x70, 0x6d, 0x69,
	0x5f, 0x63, 0x69, 0x70, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x69, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x70, 0x6d, 0x69, 0x43, 0x69, 0x70, 0x68, 0x65, 0x72, 0x53,
	0x75, 0x69, 0x74, 0x65, 0x22, 0xcc, 0x01, 0x0a, 0x0b, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f,
	0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x76, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x61, 0x63, 0x68,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x5f,
	0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x61, 0x74, 0x65, 0x6e, 0x63,
	0x79, 0x4d, 0x73, 0x22, 0xcc, 0x01, 0x0a, 0x0e, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x65, 0x64, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x11, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x14, 0x75, 0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x13, 0x75, 0x6e, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x11, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x73, 0x2a, 0xbe, 0x01, 0x0a, 0x0f, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x20, 0x0a, 0x1c, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56,
	0x45, 0x52, 0x59, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x44, 0x49, 0x53, 0x43,
	0x4f, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x49, 0x43, 0x5f, 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d,
	0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44,
	0x5f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f, 0x53, 0x43, 0x41, 0x4e, 0x10, 0x02, 0x12,
	0x25, 0x0a, 0x21, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x4d, 0x45, 0x54,
	0x48, 0x4f, 0x44, 0x5f, 0x41, 0x50, 0x49, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53, 0x54, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x56,
	0x45, 0x52, 0x59, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x4d, 0x41, 0x4e, 0x55, 0x41,
	0x4c, 0x10, 0x04, 0x42, 0x1d, 0x5a, 0x1b, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x65, 0x6e, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_v1_discovery_proto_rawDescOnce sync.Once
	file_common_v1_discovery_proto_rawDescData = file_common_v1_discovery_proto_rawDesc
)

func file_common_v1_discovery_proto_rawDescGZIP() []byte {
	file_common_v1_discovery_proto_rawDescOnce.Do(func() {
		file_common_v1_discovery_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_v1_discovery_proto_rawDescData)
	})
	return file_common_v1_discovery_proto_rawDescData
}

var file_common_v1_discovery_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_v1_discovery_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_common_v1_discovery_proto_goTypes = []interface{}{
	(DiscoveryMethod)(0),          // 0: common.v1.DiscoveryMethod
	(*DiscoveryMetadata)(nil),     // 1: common.v1.DiscoveryMetadata
	(*VendorInfo)(nil),            // 2: common.v1.VendorInfo
	(*ProtocolConfig)(nil),        // 3: common.v1.ProtocolConfig
	(*EndpointDetails)(nil),       // 4: common.v1.EndpointDetails
	(*SecurityConfig)(nil),        // 5: common.v1.SecurityConfig
	(*NetworkInfo)(nil),           // 6: common.v1.NetworkInfo
	(*CapabilityInfo)(nil),        // 7: common.v1.CapabilityInfo
	nil,                           // 8: common.v1.DiscoveryMetadata.AdditionalInfoEntry
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_common_v1_discovery_proto_depIdxs = []int32{
	0, // 0: common.v1.DiscoveryMetadata.discovery_method:type_name -> common.v1.DiscoveryMethod
	9, // 1: common.v1.DiscoveryMetadata.discovered_at:type_name -> google.protobuf.Timestamp
	2, // 2: common.v1.DiscoveryMetadata.vendor:type_name -> common.v1.VendorInfo
	3, // 3: common.v1.DiscoveryMetadata.protocol:type_name -> common.v1.ProtocolConfig
	4, // 4: common.v1.DiscoveryMetadata.endpoints:type_name -> common.v1.EndpointDetails
	5, // 5: common.v1.DiscoveryMetadata.security:type_name -> common.v1.SecurityConfig
	6, // 6: common.v1.DiscoveryMetadata.network:type_name -> common.v1.NetworkInfo
	7, // 7: common.v1.DiscoveryMetadata.capabilities:type_name -> common.v1.CapabilityInfo
	8, // 8: common.v1.DiscoveryMetadata.additional_info:type_name -> common.v1.DiscoveryMetadata.AdditionalInfoEntry
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_common_v1_discovery_proto_init() }
func file_common_v1_discovery_proto_init() {
	if File_common_v1_discovery_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_v1_discovery_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoveryMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_discovery_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VendorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_discovery_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtocolConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_discovery_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndpointDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_discovery_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecurityConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_discovery_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NetworkInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_v1_discovery_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CapabilityInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_v1_discovery_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_v1_discovery_proto_goTypes,
		DependencyIndexes: file_common_v1_discovery_proto_depIdxs,
		EnumInfos:         file_common_v1_discovery_proto_enumTypes,
		MessageInfos:      file_common_v1_discovery_proto_msgTypes,
	}.Build()
	File_common_v1_discovery_proto = out.File
	file_common_v1_discovery_proto_rawDesc = nil
	file_common_v1_discovery_proto_goTypes = nil
	file_common_v1_discovery_proto_depIdxs = nil
}
